// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../core/JSONSupport ../core/lang ../core/accessorSupport/decorators ../core/accessorSupport/ensureType ./support/stretchRendererUtils ../tasks/support/colorRamps".split(" "),function(n,p,c,l,f,d,m,e,h){return function(k){function b(a){a=k.call(this,a)||this;a.colorRamp=null;a.computeGamma=!1;a.dynamicRangeAdjustment=!1;a.gamma=[];a.maxPercent=null;a.minPercent=null;a.numberOfStandardDeviations=null;a.outputMax=null;a.outputMin=null;a.sigmoidStrengthLevel=null;a.statistics=
[];a.histograms=null;a.useGamma=!1;a.stretchType="none";a.type="raster-stretch";return a}c.__extends(b,k);g=b;b.prototype.readColorRamp=function(a){if(a)return h.fromJSON(a)};b.prototype.writeStatistics=function(a,b,c){null!==a&&void 0!==a&&a.length&&(Array.isArray(a[0])||(a=a.map(function(a){return[a.min,a.max,a.avg,a.stddev]})),b[c]=a)};b.prototype.readStretchType=function(a,b){a=b.stretchType;"number"===typeof a&&(a=e.stretchTypeFunctionEnum[a]);return e.stretchTypeJSONDict.read(a)};b.prototype.clone=
function(){return new g({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:f.clone(this.statistics),gamma:f.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:f.clone(this.colorRamp),histograms:f.clone(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment})};
var g;c.__decorate([d.property({types:h.types,json:{write:!0}})],b.prototype,"colorRamp",void 0);c.__decorate([d.reader("colorRamp")],b.prototype,"readColorRamp",null);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"computeGamma",void 0);c.__decorate([d.property({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],b.prototype,"dynamicRangeAdjustment",void 0);c.__decorate([d.property({type:[Number],json:{write:!0}})],b.prototype,"gamma",void 0);c.__decorate([d.property({type:Number,
json:{write:!0}})],b.prototype,"maxPercent",void 0);c.__decorate([d.property({type:Number,json:{write:!0}})],b.prototype,"minPercent",void 0);c.__decorate([d.property({type:m.Integer,json:{write:!0}})],b.prototype,"numberOfStandardDeviations",void 0);c.__decorate([d.property({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],b.prototype,"outputMax",void 0);c.__decorate([d.property({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],b.prototype,"outputMin",void 0);c.__decorate([d.property({type:Number,
json:{write:!0}})],b.prototype,"sigmoidStrengthLevel",void 0);c.__decorate([d.property({json:{type:[[Number]],write:!0}})],b.prototype,"statistics",void 0);c.__decorate([d.property()],b.prototype,"histograms",void 0);c.__decorate([d.writer("statistics")],b.prototype,"writeStatistics",null);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"useGamma",void 0);c.__decorate([d.property({type:e.stretchTypeJSONDict.apiValues,json:{type:e.stretchTypeJSONDict.jsonValues,write:e.stretchTypeJSONDict.write}})],
b.prototype,"stretchType",void 0);c.__decorate([d.reader("stretchType",["stretchType"])],b.prototype,"readStretchType",null);c.__decorate([d.enumeration({rasterStretch:"raster-stretch"})],b.prototype,"type",void 0);return b=g=c.__decorate([d.subclass("esri.renderers.RasterStretchRenderer")],b)}(l.JSONSupport)});