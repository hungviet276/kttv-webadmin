// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../core/Collection ../../core/Handles ../../core/Loadable ../../core/promiseUtils ../../core/watchUtils ../../core/accessorSupport/decorators ../../support/basemapUtils ./support/basemapCompatibilityUtils ./support/BasemapGalleryItem ./support/LocalBasemapsSource ./support/PortalBasemapsSource".split(" "),function(u,v,c,f,q,g,h,k,d,r,l,m,t,e){var n=f.ofType(m);return function(p){function b(a){a=p.call(this,a)||this;a._handles=new q;a.activeBasemap=null;a.items=new n;
a.source=new e;a.view=null;return a}c.__extends(b,p);b.prototype.initialize=function(){var a=this,b=function(){return a._recreateItems()};this._handles.add([k.watch(this,["compatibilityFunction","state"],function(){return a._updateItems()}),k.on(this,"source.basemaps","change",b,b)])};b.prototype.destroy=function(){this._handles.destroy();this._handles=null};Object.defineProperty(b.prototype,"compatibilityFunction",{get:function(){return void 0===this._get("compatibilityFunction")?"3d"===this.get("view.type")?
l.default3DCompatibility:l.default2DCompatibility:this._get("compatibilityFunction")},set:function(a){this._set("compatibilityFunction",a)},enumerable:!1,configurable:!0});b.prototype.castSource=function(a){return Array.isArray(a)||f.isCollection(a)?new t({basemaps:a}):a&&"esri.portal.Portal"===a.declaredClass?new e({portal:a}):!a||a instanceof e||!a.portal&&!a.query?a&&"basemaps"in a&&"state"in a&&"refresh"in a?a:null:new e(a)};Object.defineProperty(b.prototype,"state",{get:function(){return this.get("view.ready")&&
this.source?"ready":"disabled"},enumerable:!1,configurable:!0});b.prototype.basemapEquals=function(a,b){return r.contentEquals(a,b)};b.prototype.refresh=function(){this._recreateItems()};b.prototype.load=function(a){this.addResolvingPromise(g.isLoadable(this.source)?this.source.load(a):h.resolve());return h.resolve(this)};b.prototype._recreateItems=function(){var a=this.get("source.basemaps"),b=this.view,c=this.compatibilityFunction;this.items.removeAll().forEach(function(a){return a.destroy()});
this.items.addMany(a.map(function(a){return new m({basemap:a,compatibilityFunction:c,view:b})}))};b.prototype._updateItems=function(){var a=this;this.items.forEach(function(b){b.compatibilityFunction=a.compatibilityFunction;b.view=a.view})};c.__decorate([d.property({aliasOf:"view.map.basemap"})],b.prototype,"activeBasemap",void 0);c.__decorate([d.property({dependsOn:["view.type"]})],b.prototype,"compatibilityFunction",null);c.__decorate([d.property({readOnly:!0,type:n})],b.prototype,"items",void 0);
c.__decorate([d.property()],b.prototype,"source",void 0);c.__decorate([d.cast("source")],b.prototype,"castSource",null);c.__decorate([d.property({readOnly:!0,dependsOn:["view.ready"]})],b.prototype,"state",null);c.__decorate([d.property()],b.prototype,"view",void 0);return b=c.__decorate([d.subclass("esri.widgets.BasemapGallery.BasemapGalleryViewModel")],b)}(g)});