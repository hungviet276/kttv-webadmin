// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib @dojo/framework/shim/AbortController ../../../Basemap ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/Loadable ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../../portal/Portal ./LocalBasemapsSource".split(" "),function(y,z,c,l,m,n,p,q,r,t,u,f,v,d,g,w){var h=n.ofType(m),x=t.getLogger("esri.widgets.BasemapGallery.support.PortalBasemapsSource");
return function(k){function b(a){a=k.call(this,a)||this;a._handles=new q;a.basemaps=new h;a.filterFunction=null;a.portal=g.getDefault();a.query=null;a.updateBasemapsCallback=null;return a}c.__extends(b,k);b.prototype.initialize=function(){var a=this;this._handles.add([v.init(this,"filterFunction loadStatus portal.basemapGalleryGroupQuery portal.user query updateBasemapsCallback".split(" "),function(){return a.refresh()})])};b.prototype.destroy=function(){this._handles.destroy();this.portal=this.filterFunction=
this._handles=null};Object.defineProperty(b.prototype,"state",{get:function(){return"not-loaded"===this.loadStatus?"not-loaded":"loading"===this.loadStatus||this._lastPortalBasemapFetchController?"loading":"ready"},enumerable:!1,configurable:!0});b.prototype.load=function(a){this.addResolvingPromise(this.portal.load(a));this.notifyChange("state");return f.resolve(this)};b.prototype.refresh=function(){return c.__awaiter(this,void 0,void 0,function(){var a,b,d,e;return c.__generator(this,function(c){switch(c.label){case 0:if("ready"!==
this.state)return[2];this._lastPortalBasemapFetchController&&(this._lastPortalBasemapFetchController.abort(),this._lastPortalBasemapFetchController=null);a=this.portal;this._lastPortalBasemapFetchController=b=new l.default;this.notifyChange("state");c.label=1;case 1:return c.trys.push([1,3,,4]),[4,a.fetchBasemaps(this._toQueryString(this.query),b)];case 2:return d=c.sent(),this._updateBasemaps(d),[3,4];case 3:e=c.sent();if(f.isAbortError(e))throw e;x.warn(new p("basemap-source:fetch-basemaps-error",
"Could not fetch basemaps from portal.",{error:e}));this._updateBasemaps();return[3,4];case 4:return this._lastPortalBasemapFetchController=null,this.notifyChange("state"),[2]}})})};b.prototype._toQueryString=function(a){return a&&"string"!==typeof a?Object.keys(a).map(function(b){return b+":"+a[b]}).join(" AND "):a};b.prototype._updateBasemaps=function(a){void 0===a&&(a=[]);a=this.filterFunction?a.filter(this.filterFunction):a;a=this.updateBasemapsCallback?this.updateBasemapsCallback(a):a;this.basemaps.removeAll();
this.basemaps.addMany(a)};c.__decorate([d.property({readOnly:!0,type:h})],b.prototype,"basemaps",void 0);c.__decorate([d.property()],b.prototype,"filterFunction",void 0);c.__decorate([d.property({type:g})],b.prototype,"portal",void 0);c.__decorate([d.property()],b.prototype,"query",void 0);c.__decorate([d.property({dependsOn:["loadStatus"],readOnly:!0})],b.prototype,"state",null);c.__decorate([d.property()],b.prototype,"updateBasemapsCallback",void 0);return b=c.__decorate([d.subclass("esri.widgets.BasemapGallery.support.PortalBasemapsSource")],
b)}(r.LoadableMixin(u.EsriPromiseMixin(w)))});