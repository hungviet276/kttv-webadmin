// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../PopupTemplate ../../../intl/messages ../../../intl/substitute ../../../layers/support/fieldUtils ../../../popup/ExpressionInfo ../../../popup/FieldInfo ../../../popup/support/FieldInfoFormat ../../support/clusterUtils ../../../views/2d/layers/support/clusterUtils".split(" "),function(N,m,r,H,I,x,y,J,K,L,d,M){function z(a){var b=a.fieldName,n=a.label;a=a.type;var c=-1<y.numericTypes.indexOf(a),b=new K({fieldName:b,label:n,visible:!0,format:c?{places:"integer"===
a||"small-integer"===a?0:2,digitSeparator:!0}:null});"date"===a&&(b.format=new L({dateFormat:"short-date-short-time"}));return b}function t(a,b){return(a=b.getField(a))&&(a.alias||a.name)}function E(a,b,n,c){var g=b.attributeInfo,d=b.statisticType,h=g.field;b=g.normalizationField;var e="",f;"avg"===d?f=b?c.clusters.avgNormFieldSummary:c.clusters.avgFieldSummary:"type"===d&&(f=c.clusters.predominantFieldSummary);f&&(c=g.valueExpression?g.valueExpressionTitle:t(h,a),a=b&&t(b,a),e=x.substitute(f,{fieldLabel:c||
"",normFieldLabel:a||"",fieldValue:"{"+n+"}"}));return e}Object.defineProperty(m,"__esModule",{value:!0});m.createPopupTemplate=void 0;m.createPopupTemplate=function(a,b){return r.__awaiter(this,void 0,void 0,function(){var n,c,g,m,h,e,f,u,A,k,v,F,p,B,C;return r.__generator(this,function(l){switch(l.label){case 0:if(!M.isClusterCompatibleRenderer(b))return[2,null];n=d.getStatisticInfos(a,b);return[4,I.loadMessageBundle("esri/smartMapping/t9n/smartMapping")];case 1:c=l.sent();g=c.clusters.predominantNoneValue;
m="unique-value"===b.type?b.uniqueValueInfos:[];h=[];e=[];f=[];h.push(x.substitute(c.clusters.countSummary,{count:"{"+d.clusterCountField+"}"}));e.push(z({fieldName:d.clusterCountField,label:c.clusters.numFeatures,type:"integer"}));u=0;for(A=n;u<A.length;u++){k=A[u];v=k.statisticType;F=k.attributeInfo;p=d.getClusterField(F,v);var w=a,q=k.attributeInfo,r=k.statisticType,y=q.field,D=q.normalizationField,G="";l=void 0;"avg"===r?l=D?c.clusters.avgNormFieldLabel:c.clusters.avgFieldLabel:"type"===r&&(l=
c.clusters.predominantFieldLabel);l&&(q=q.valueExpression?q.valueExpressionTitle:t(y,w),w=D&&t(D,w),G=x.substitute(l,{fieldLabel:q||"",normFieldLabel:w||""}));B=G;"avg"===v?(h.push(E(a,k,p,c)),e.push(z({fieldName:p,label:B,type:"double"}))):"type"===v&&(C="expression/"+p,h.push(E(a,k,C,c)),f.push(new J({name:p,title:B,returnType:"string",expression:d.getPredominantTypeExpression(m,p,g)})),e.push(z({fieldName:C})))}return[2,new H({fieldInfos:e,expressionInfos:f,content:h.join("\x3cbr/\x3e\x3cbr/\x3e")})]}})})}});