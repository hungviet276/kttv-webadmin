// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/SetUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../tasks/ImageServiceIdentifyTask ../../tasks/QueryTask ../../tasks/support/FeatureSet ../../tasks/support/ImageServiceIdentifyParameters ../../tasks/support/Query".split(" "),
function(va,q,c,w,ba,U,p,x,G,V,ca,A,r,da,ea,e,H,fa,W,ga,ha,C,ia,ja,B,ka,E,I,la,J,X,ma,na,oa,Y,pa,qa){function ra(c){if(!c)return null;c=JSON.stringify(c).match(/"rasterFunction":"(.*?")/gi);return(c=null===c||void 0===c?void 0:c.map(function(c){return c.replace('"rasterFunction":"',"").replace('"',"")}))?c.join("/"):null}Object.defineProperty(q,"__esModule",{value:!0});q.ArcGISImageService=void 0;var sa=ca.getLogger("esri.layers.mixins.ArcGISImageService"),Q=G.strict()({RSP_NearestNeighbor:"nearest",
RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),R=G.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),S=G.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),ta=da.SetFromValues("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),ua=fa.ensureRange(H.ensureNumber,{min:0,max:255});q.ArcGISImageService=function(q){return function(q){function b(){var a=
null!==q&&q.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._symbolizer=null;a._defaultServiceMosaicRule=null;a.rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=
!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=null;a.raster=void 0;a.viewId=void 0;a.renderer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=null;return a}c.__extends(b,
q);b.prototype.initialize=function(){this._set("exportImageServiceParameters",new ha.ExportImageServiceParameters({layer:this}))};b.prototype.readDefaultServiceMosaicRule=function(a,d){return B.fromJSON(d)};Object.defineProperty(b.prototype,"rasterFunctionNamesIndex",{get:function(){var a=new Map;if(!this.rasterFunctionInfos||1>this.rasterFunctionInfos.length)return a;this.rasterFunctionInfos.forEach(function(d){a.set(d.name.toLowerCase().replace(/ /gi,"_"),d.name)});return a},enumerable:!1,configurable:!0});
Object.defineProperty(b.prototype,"queryTask",{get:function(){return new oa({url:this.url})},enumerable:!1,configurable:!0});b.prototype.readBandIds=function(a,d){if(Array.isArray(a)&&0<a.length&&a.every(function(a){return"number"===typeof a}))return a};b.prototype.readCapabilities=function(a,d){return this._readCapabilities(d)};b.prototype.writeCompressionQuality=function(a,d,f){null!=a&&"lerc"!==this.format&&(d[f]=a)};b.prototype.writeCompressionTolerance=function(a,d,f){"lerc"===this.format&&null!=
a&&(d[f]=a)};Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return this.fields?new ia(this.fields):null},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"format",{set:function(a){a&&ta.has(a.toLowerCase())&&this._set("format",a.toLowerCase())},enumerable:!1,configurable:!0});b.prototype.readFormat=function(a,d){return"esriImageServiceDataTypeVector-UV"===d.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===d.serviceDataType?"lerc":null!=this.pixelFilter?
"lerc":"jpgpng"};b.prototype.readMinScale=function(a,d){return null!=d.minLOD&&null!=d.maxLOD?a:0};b.prototype.readMaxScale=function(a,d){return null!=d.minLOD&&null!=d.maxLOD?a:0};Object.defineProperty(b.prototype,"mosaicRule",{set:function(a){a&&a.mosaicMethod&&(a=B.fromJSON(c.__assign(c.__assign({},a.toJSON()),{mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation})));this._set("mosaicRule",a)},enumerable:!1,configurable:!0});b.prototype.readMosaicRule=function(a,d){return B.fromJSON(a||
d.mosaicRule||d)};b.prototype.writeMosaicRule=function(a,d,f){a=this.mosaicRule;var b=this.definitionExpression;a?b&&b!==a.where&&(a=a.clone(),a.where=b):b&&(a=new B({where:b}));this._isValidCustomizedMosaicRule(a)&&(d[f]=a.toJSON())};b.prototype.writeNoData=function(a,d,f){null!=a&&"number"===typeof a&&(d[f]=ua(a))};b.prototype.readObjectIdField=function(a,d){a||(a=(a=d.fields.filter(function(a){return"esriFieldTypeOID"===a.type||"oid"===a.type}))&&a[0]&&a[0].name);return a};Object.defineProperty(b.prototype,
"parsedUrl",{get:function(){return this.url?ea.urlToObject(this.url):null},enumerable:!1,configurable:!0});b.prototype.readRenderer=function(a,d,f){a=U.read(d&&d.layerDefinition&&d.layerDefinition.drawingInfo&&d.layerDefinition.drawingInfo.renderer,f)||void 0;if(null!=a)return ja.isSupportedRendererType(a)||sa.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a};Object.defineProperty(b.prototype,"rasterFields",{get:function(){var a=this.rasterAttributeTableFieldPrefix||
"Raster.",d=new C({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),f=new C({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),b=new C({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),c=this.fields?V.clone(this.fields):[];c.push(f);this.capabilities.operations.supportsQuery&&this.fields&&0<this.fields.length&&c.push(d);
10.4<=this.version&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(function(a){return"none"===a.name.toLowerCase()})&&c.push(b);this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(function(a){return"none"!==a.name.toLowerCase()}).forEach(function(a){c.push(new C({name:"Raster.ServicePixelValue."+a.name,alias:a.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==
this.serviceDataType||(c.push(new C({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),c.push(new C({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(d=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<d.length&&(d=d.filter(function(a){return"esriFieldTypeOID"!==a.type&&"value"!==a.name.toLowerCase()}).map(function(d){var f=V.clone(d);f.name=a+d.name;return f}),c=c.concat(d));return c},enumerable:!1,
configurable:!0});Object.defineProperty(b.prototype,"renderingRule",{set:function(a){a&&a.rasterFunction&&(a=E.fromJSON(c.__assign(c.__assign({},a.toJSON()),{rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments})));this._set("renderingRule",a)},enumerable:!1,configurable:!0});b.prototype.readRenderingRule=function(a,d){a=d.rasterFunctionInfos;return d.renderingRule||a&&a.length&&"None"!==a[0].name?E.fromJSON(d.renderingRule||{rasterFunctionInfos:d.rasterFunctionInfos}):
null};b.prototype.writeRenderingRule=function(a,d,f){this._isRFTJson(a)||(d[f]=a.toJSON())};b.prototype.readSpatialReference=function(a,d){return(a=a||d.extent.spatialReference)?w.SpatialReference.fromJSON(a):null};b.prototype.readPixelType=function(a){return S.fromJSON(a)||a};b.prototype.writePixelType=function(a,d,f){if(A.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)d[f]=S.toJSON(a)};b.prototype.readVersion=function(a,d){(a=d.currentVersion)||(a=d.hasOwnProperty("fields")||
d.hasOwnProperty("timeInfo")?10:9.3);return a};b.prototype.applyFilter=function(a){var d=a;this.pixelFilter&&(d=this._clonePixelData(a),this.pixelFilter(d));return d};b.prototype.applyRenderer=function(a,d){return c.__awaiter(this,void 0,void 0,function(){var f,b,m,g,k;return c.__generator(this,function(h){switch(h.label){case 0:f=a;if(this._isPicture()||!this.renderer||!this._symbolizer||this.pixelFilter)return[3,5];b=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());
m=this._rasterJobHandler.instance;g=this.bandIds;if(!m)return[3,4];if(!b)return[3,2];this._symbolizer.bind();return[4,m.updateSymbolizer(this._symbolizer,d)];case 1:h.sent(),this._cachedRendererJson=this.renderer.toJSON(),h.label=2;case 2:return[4,m.symbolize(c.__assign({bandIds:g},a),d)];case 3:return k=h.sent(),f={extent:a.extent,pixelBlock:k},[3,5];case 4:f={extent:a.extent,pixelBlock:this._symbolizer.symbolize(c.__assign({bandIds:g},a))},h.label=5;case 5:return[2,f]}})})};b.prototype.destroy=
function(){this._shutdownJobHandler()};b.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};b.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};b.prototype.fetchImage=function(a,d,f,b){var c=this;void 0===b&&(b={});if(null==a||null==d||null==f)return r.reject(new x("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));
var h=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:b.signal}):null;return r.when(h).then(function(h){h&&(c.rasterInfo=h);h={imageServiceParameters:c.getExportImageServiceParameters(a,d,f,b.timeExtent),imageProps:{extent:a,width:d,height:f,format:c.format},requestAsImageElement:b.requestAsImageElement&&!c.pixelFilter||!1,signal:b.signal};return c._requestArrayBuffer(h)})};b.prototype.fetchKeyProperties=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();
return p(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(function(a){return a.data})};b.prototype.fetchRasterAttributeTable=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return 10.1>this.version?r.reject(new x("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):p(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):
null})}).then(function(a){return Y.fromJSON(a.data)})};b.prototype.getCatalogItemRasterInfo=function(a,d){return c.__awaiter(this,void 0,void 0,function(){var b,h,m,g,k;return c.__generator(this,function(f){switch(f.label){case 0:return b=p(this.parsedUrl.path+"/"+a+"/info",c.__assign({query:this._getQueryParams()},d)).then(function(a){return a.data}),h=p(this.parsedUrl.path+"/"+a+"/info/keyProperties",c.__assign({query:this._getQueryParams()},d)).then(function(a){return a.data}).catch(function(){}),
[4,r.all([b,h])];case 1:m=f.sent();if(!m[0])return[2,void 0];g=w.Extent.fromJSON(m[0].extent);k=m[0].statistics?m[0].statistics.map(function(a){return{min:a[0],max:a[1],avg:a[2],stddev:a[3]}}):null;return[2,new I({bandCount:m[0].bandCount,extent:g,spatialReference:g.sr,pixelSize:new w.Point({x:m[0].pixelSizeX,y:m[0].pixelSizeY,spatialReference:g.sr}),pixelType:m[0].pixelType.toLowerCase(),statistics:k,histograms:m[0].histograms,keyProperties:m[1]||{}})]}})})};b.prototype.getCatalogItemICSInfo=function(a,
d){var b,h,m;return c.__awaiter(this,void 0,void 0,function(){var f,k,l,e,n,y,u,Z,K,q,T,aa,x,v,A,C,L,N,F,B,z,O,P,E,G,H,D,M,I,J;return c.__generator(this,function(g){switch(g.label){case 0:return[4,p(this.parsedUrl.path+"/"+a+"/info/ics",c.__assign({query:this._getQueryParams()},d))];case 1:k=(f=g.sent().data)&&f.ics;if(!k)return[2,void 0];l=null;g.label=2;case 2:return g.trys.push([2,4,,5]),[4,p(this.parsedUrl.path+"/"+a+"/info",c.__assign({query:this._getQueryParams()},d))];case 3:return e=g.sent(),
l=e.data.extent,[3,5];case 4:return g.sent(),[3,5];case 5:if(!l||!l.spatialReference)return[2,{ics:k,icsToPixelTransform:null,icsExtent:null,northDirection:null}];n=10.7<=this.version?p(this.parsedUrl.path+"/"+a+"/info/icstopixel",c.__assign({query:this._getQueryParams()},d)).then(function(a){return a.data}).catch(function(){return{}}):{};y=l.spatialReference;u={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:y.wkid||JSON.stringify(y),outSR:"0:"+a};Z=p(this.parsedUrl.path+
"/project",c.__assign({query:this._getQueryParams(u)},d)).then(function(a){return a.data}).catch(function(){return{}});K=5;q=(l.xmin+l.xmax)/2;T=(l.ymax-l.ymin)/(K+1);aa=l.ymin+T;x=[];for(v=0;v<K;v++)x.push({x:q,y:aa+T*v});A={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:x}),inSR:y.wkid||JSON.stringify(y),outSR:"0:"+a};C=p(this.parsedUrl.path+"/project",c.__assign({query:this._getQueryParams(A)},d)).then(function(a){return a.data}).catch(function(){return{}});return[4,r.all([n,
Z,C])];case 6:L=g.sent();N=L[0].ipxf;null==N&&(F=null===(b=k.geodataXform)||void 0===b?void 0:b.xf_0,"topup"===(null===(h=null===F||void 0===F?void 0:F.name)||void 0===h?void 0:h.toLowerCase())&&6===(null===(m=null===F||void 0===F?void 0:F.coefficients)||void 0===m?void 0:m.length)&&(N={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:F.coefficients,cellsizeRatio:0,type:"GeometricXform"}}));if(B=w.Extent.fromJSON(L[1]&&L[1].geometries&&L[1].geometries[0]))B.spatialReference=
new w.SpatialReference({wkid:0,imageCoordinateSystem:k});z=L[2].geometries?L[2].geometries.filter(function(a){return null!=a&&null!=a.x&&null!=a.y&&"NaN"!==a.x&&"NaN"!==a.y}):[];O=z.length;if(3>O)return[2,{ics:k,icsToPixelTransform:N,icsExtent:B,northDirection:null}];for(v=H=G=E=P=0;v<O;v++)P+=z[v].x,E+=z[v].y,G+=z[v].x*z[v].x,H+=z[v].x*z[v].y;D=(O*H-P*E)/(O*G-P*P);M=0;I=z[K-1].x>z[0].x;J=z[K-1].y>z[0].y;Infinity===D?M=J?90:270:0===D?M=I?0:180:0<D?M=I?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+
180:0>D&&(M=J?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI);return[2,{ics:k,icsToPixelTransform:N,icsExtent:B,northDirection:M}]}})})};b.prototype.generateRasterInfo=function(a,d){return c.__awaiter(this,void 0,void 0,function(){var b,h;return c.__generator(this,function(f){switch(f.label){case 0:if((!a||"none"===a.functionName.toLowerCase())&&A.isSome(this.serviceRasterInfo))return[2,this.serviceRasterInfo];b=ra(a);if(this._functionRasterInfos[b])return[2,this._functionRasterInfos[b]];
h=this._generateRasterInfo(a,d);this._functionRasterInfos[b]=h;f.label=1;case 1:return f.trys.push([1,3,,4]),[4,h];case 2:return[2,f.sent()];case 3:return f.sent(),this._functionRasterInfos[b]=null,[2,null];case 4:return[2]}})})};b.prototype.getExportImageServiceParameters=function(a,d,b,h){a=a.clone().shiftCentralMeridian();var f=a.spatialReference;if(f.imageCoordinateSystem)var g=f.imageCoordinateSystem,k=g.id,g=g.referenceServiceName,f=null!=k?g?-1<this.parsedUrl.path.toLowerCase().indexOf("/"+
g.toLowerCase()+"/")?"0:"+k:JSON.stringify({icsid:k,icsns:g}):"0:"+k:JSON.stringify({ics:f.imageCoordinateSystem});else f=f.wkid||JSON.stringify(f.toJSON());A.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);var k=this.exportImageServiceParameters.toJSON(),g=k.bandIds,e=k.noData,t=k.mosaicRule,n=k.renderingRule;g instanceof Array&&0<g.length&&(k.bandIds=g.join(","));e instanceof Array&&0<e.length&&(k.noData=
e.join(","));var y=this.timeInfo;t&&t.multidimensionalDefinition&&h&&y&&y.startField&&(t.multidimensionalDefinition=t.multidimensionalDefinition.filter(function(a){return a.dimensionName!==y.startField}));k.mosaicRule=t&&JSON.stringify(t);k.renderingRule=n&&JSON.stringify(n);g={};if(h)if(e=h.toJSON(),h=e.start,e=e.end,h&&e&&h===e)g.time=""+h;else if(null!=h||null!=e)g.time=(null==h?"null":h)+","+(null==e?"null":e);return c.__assign(c.__assign({bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:f,
imageSR:f,size:d+","+b},k),g)};b.prototype.queryRasters=function(a){return this.queryTask.execute(a)};b.prototype.queryVisibleRasters=function(a,d){var b=this;if(!a)return r.reject(new x("imagery-layer: query-visible-rasters","missing query parameter"));var c=d||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};d=c.pixelSize;var e=c.returnDomainValues,g=c.returnTopmostRaster,k=c.showNoDataRecords,l=!1,t=c=null,n=this.rasterFunctionNamesIndex;if(a.outFields&&(l=a.outFields.some(function(a){return-1===
a.toLowerCase().indexOf("raster.servicepixelvalue")}),10.4<=this.version)){var y=a.outFields.filter(function(a){return-1<a.toLowerCase().indexOf("raster.servicepixelvalue")&&24<a.length}).map(function(a){a=a.slice(25);return[b._updateRenderingRulesFunctionName(a,n),a]}),c=y.map(function(a){return new E({functionName:a[0]})}),t=y.map(function(a){return a[1]});0===c.length?this.renderingRule?(c.push(this.renderingRule),t.push(this.renderingRule.functionName)):c=null:this.renderingRule&&!c.some(function(a){return a.functionName===
b.renderingRule.functionName})&&(c.push(this.renderingRule),t.push(this.renderingRule.functionName))}var u=!a.outSpatialReference||a.outSpatialReference.equals(this.spatialReference);d=this._getQueryParams({geometry:a.geometry,timeExtent:a.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:c,pixelSize:d,returnCatalogItems:l,returnGeometry:u,maxItemCount:g?1:null});delete d.f;var p=new pa(d),K=new na({url:this.url}),
q=this.generateRasterInfo(this.renderingRule);return r.create(function(d){q.then(function(){K.execute(p).then(function(f){var c=a.outFields;if(l&&!u&&f.catalogItems&&f.catalogItems.features&&0<f.catalogItems.features.length){var h=b.objectIdField||"ObjectId",g=f.catalogItems.features,m=g.map(function(a){return a.attributes&&a.attributes[h]}),m=new qa({objectIds:m,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[h]});return b.queryRasters(m).then(function(m){m&&m.features&&0<
m.features.length&&m.features.forEach(function(d){g.forEach(function(b){b.attributes[h]===d.attributes[h]&&(b.geometry=new w.Polygon(d.geometry),b.geometry.spatialReference=a.outSpatialReference)})});d(b._processVisibleRastersResponse(f,{returnDomainValues:e,templateRRFunctionNames:t,showNoDataRecords:k,templateFields:c}))}).catch(function(){throw new x("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry");})}d(b._processVisibleRastersResponse(f,{returnDomainValues:e,
templateRRFunctionNames:t,showNoDataRecords:k,templateFields:c}))}).catch(function(){throw new x("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");})})})};b.prototype.fetchVariableStatisticsHistograms=function(a,d){return c.__awaiter(this,void 0,void 0,function(){var b,h,e;return c.__generator(this,function(f){switch(f.label){case 0:return b=p(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:a}),signal:d}).then(function(a){var d;return null===
(d=a.data)||void 0===d?void 0:d.statistics}),h=p(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:a}),signal:d}).then(function(a){var d;return null===(d=a.data)||void 0===d?void 0:d.histograms}),[4,r.all([b,h])];case 1:return e=f.sent(),e[0]&&e[0].forEach(function(a){a.avg=a.mean;a.stddev=a.standardDeviation}),[2,{statistics:e[0]||null,histograms:e[1]||null}]}})})};b.prototype._fetchService=function(a){var d;return c.__awaiter(this,void 0,void 0,function(){var b,h,e,g,k,l,t,
n=this;return c.__generator(this,function(f){switch(f.label){case 0:return(b=this.sourceJSON)?[3,2]:[4,p(this.parsedUrl.path,{query:this._getQueryParams(),signal:a})];case 1:h=f.sent(),e=h.data,g=h.ssl,this.sourceJSON=b=e,g&&(this.url=this.url.replace(/^http:/i,"https:")),f.label=2;case 2:if(k=-1<(null===(d=b.capabilities)||void 0===d?void 0:d.toLowerCase().split(",").map(function(a){return a.trim()}).indexOf("tilesonly")))throw new x("imagery-layer:fetch-metadata","use ImageryTileLayer to open tiles-only image services");
this.read(b,{origin:"service",url:this.parsedUrl});A.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);l=A.isSome(this.serviceRasterInfo)?r.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:b,signal:a}).then(function(a){n._set("serviceRasterInfo",a);return a});t=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:a}):null;return[2,r.all([l,t]).then(function(a){a[1]?
n._set("rasterInfo",a[1]):n._set("rasterInfo",a[0]);n._configDefaultRenderer();n.watch("renderer",function(){return n._configDefaultRenderer()});n.watch("renderingRule",function(a){(n.renderer||n._symbolizer||n.popupEnabled&&n.popupTemplate)&&n.generateRasterInfo(a).then(function(a){a&&(n.rasterInfo=a)})});(a=A.isSome(n.serviceRasterInfo)&&n.serviceRasterInfo.multidimensionalInfo)&&n._updateMultidimensionalDefinition(a)})]}})})};b.prototype._initJobHandler=function(){return c.__awaiter(this,void 0,
void 0,function(){var a,d=this;return c.__generator(this,function(b){switch(b.label){case 0:if(null!=this._rasterJobHandler.connectionPromise)return[2,this._rasterJobHandler.connectionPromise];a=new la;this._rasterJobHandler.connectionPromise=a.initialize().then(function(){d._rasterJobHandler.instance=a},function(){return null});return[4,this._rasterJobHandler.connectionPromise];case 1:return b.sent(),[2]}})})};b.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();
this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0};b.prototype._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};b.prototype._configDefaultRenderer=function(){var a,d;if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){var b=X.getDefaultBandCombination(this.rasterInfo);!b||3===this.rasterInfo.bandCount&&0===b[0]&&1===b[1]&&2===b[2]||(this.bandIds=
b)}this.renderer||(this.renderer=X.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null===(d=null===(a=this.mosaicRule)||void 0===a?void 0:a.multidimensionalDefinition)||void 0===d?void 0:d[0].variableName}));this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new ma({renderer:this.renderer,rasterInfo:this.rasterInfo});this._symbolizer.bind()||(this._symbolizer=null)}};b.prototype._clonePixelData=
function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:a.pixelBlock&&a.pixelBlock.clone()}};b.prototype._getQueryParams=function(a){return c.__assign({raster:this.raster,viewId:this.viewId,f:"json"},a)};b.prototype._decodePixelBlock=function(a,d,b){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:d}):J.decode(a,d,b)};b.prototype._fetchMultidimensionalInfo=function(a){var d;return c.__awaiter(this,void 0,void 0,function(){var b;return c.__generator(this,
function(c){switch(c.label){case 0:return[4,p(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:a}).then(function(a){var d;return null===(d=a.data)||void 0===d?void 0:d.multidimensionalInfo})];case 1:return b=c.sent(),(null===(d=b.variables)||void 0===d?0:d.length)&&b.variables.forEach(function(a){var d;(null===(d=a.statistics)||void 0===d?0:d.length)&&a.statistics.forEach(function(a){a.avg=a.mean;a.stddev=a.standardDeviation})}),[2,b]}})})};b.prototype._fetchAuxiliaryRasterInfo=
function(a){var d=a&&a.serviceInfo;if(!d)return r.reject(new x("imagery-layer:fetch-metadata","valid serviceInfo is required"));var b=a.renderingRule?JSON.stringify(a.renderingRule.toJSON()):null,c=a.signal;a=d.hasRasterAttributeTable&&10.1<=this.version?p(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=this.version?b:null}),signal:c}).then(function(a){return Y.fromJSON(a.data)}).catch(function(){return null}):!1;var e=d.hasColormap&&10.1<=this.version?
p(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:10.6<=this.version?b:null}),signal:c}).then(function(a){var d;return null===(d=a.data)||void 0===d?void 0:d.colormap}):!1,g=d.hasHistograms&&10.1<=this.version?p(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=this.version?b:null}),signal:c}).then(function(a){var d;return null===(d=a.data)||void 0===d?void 0:d.histograms}):!1,b=10.3<=this.version?p(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:b}),
signal:c}).then(function(a){return a.data}).catch(function(){}):!1,c=d.hasMultidimensions&&10.3<=this.version?this._fetchMultidimensionalInfo():!1;return r.all([a,e,g,b,c]).then(function(a){var b=null;if(d.minValues&&d.minValues.length===d.bandCount)for(var b=[],c=0;c<d.minValues.length;c++)b.push({min:d.minValues[c],max:d.maxValues[c],avg:d.meanValues[c],stddev:d.stdvValues[c]});var c=Math.ceil((d.extent.xmax-d.extent.xmin)/d.pixelSizeX-.1),f=Math.ceil((d.extent.ymax-d.extent.ymin)/d.pixelSizeY-
.1),h=w.SpatialReference.fromJSON(d.spatialReference||d.extent.spatialReference);return new I({width:c,height:f,bandCount:d.bandCount,extent:w.Extent.fromJSON(d.extent),spatialReference:h,pixelSize:new w.Point({x:d.pixelSizeX,y:d.pixelSizeY,spatialReference:h}),pixelType:d.pixelType.toLowerCase(),statistics:b,attributeTable:a[0]||null,colormap:a[1]||null,histograms:a[2]||null,keyProperties:a[3]||{},multidimensionalInfo:a[4]||null})})};b.prototype._requestArrayBuffer=function(a){var d=this,b=a.imageProps,
h=a.signal;if(a.requestAsImageElement&&!this.pixelFilter&&b.format&&-1<b.format.indexOf("png"))return p(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(c.__assign({f:"image"},a.imageServiceParameters)),signal:h}).then(function(a){return{imageElement:a.data,params:b}});var e=this._initJobHandler();a=p(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(c.__assign({f:"image"},a.imageServiceParameters)),signal:h});return r.all([a,
e]).then(function(a){a=a[0].data;var f=b.format||"jpgpng",e=f;"bsq"!==e&&"bip"!==e&&(e=J.getFormat(a));if(!e)throw new x("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(a)));var e="gif"===f||"bmp"===f||-1<f.indexOf("png")&&("png"===e||"jpg"===e),g={signal:h};return e?J.decode(a,c.__assign({useCanvas:!0},b),g).then(function(a){return{pixelData:{pixelBlock:a,extent:b.extent},params:b}}):d._decodePixelBlock(a,{width:b.width,height:b.height,planes:null,
pixelType:null,noDataValue:null,format:f},g).then(function(a){return{pixelData:{pixelBlock:a,extent:b.extent},params:b}})})};b.prototype._generateRasterInfo=function(a,d){return c.__awaiter(this,void 0,void 0,function(){var b,e;return c.__generator(this,function(f){switch(f.label){case 0:return[4,p(this.parsedUrl.path,c.__assign({query:this._getQueryParams({renderingRule:a})},d))];case 1:return b=f.sent().data,[4,this._fetchAuxiliaryRasterInfo(c.__assign({serviceInfo:b,renderingRule:a},d))];case 2:return e=
f.sent(),[2,e]}})})};b.prototype._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())};b.prototype._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var b=a.variables[0].dimensions;a=[];for(var c in b)if(b.hasOwnProperty(c)){var e=b[c],m=e.extent,g=!0,k=[m[0]];e.hasRanges&&!0===e.hasRanges?(g=!1,k=[e.values[0]]):"stdz"===e.name.toLowerCase()&&
Math.abs(m[1])<=Math.abs(m[0])&&(k=[m[1]]);a.push(new ga({variableName:"",dimensionName:b[c].name,isSlice:g,values:k}))}0<a.length&&(this.mosaicRule=this.mosaicRule||new B,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=a)}};b.prototype._formatAttributeValue=function(a,b){if("string"===typeof a&&(b=(b=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,b))&&b.format)){var d=void 0,c=void 0;return-1<a.trim().indexOf(",")?
(d=",",this._formatDelimitedString(a,d,d+" ",b)):-1<a.trim().indexOf(" ")?(d=c=" ",this._formatDelimitedString(a,d,c,b)):this._formatNumberFromString(a,b)}return a};b.prototype._getFieldInfo=function(a,b){if(a&&a.length&&b){var d=b.toLowerCase(),c=void 0;a.some(function(a){return!a.fieldName||a.fieldName.toLowerCase()!==d&&a.fieldName.toLowerCase()!==d.replace(/ /g,"_")?!1:(c=a,!0)});return c}};b.prototype._formatDelimitedString=function(a,b,c,e){var d=this;return a&&b&&c&&e?a.trim().split(b).map(function(a){return d._formatNumberFromString(a,
e)}).join(c):a};b.prototype._formatNumberFromString=function(a,b){if(!a||!b)return a;var d=Number(a);return isNaN(d)?a:b.format(d)};b.prototype._processVisibleRastersResponse=function(a,b){b=b||{};var d=a.value,c=b.templateRRFunctionNames,e=b.showNoDataRecords,g=b.returnDomainValues,k=b.templateFields;b=a.processedValues;var l=a.catalogItems&&a.catalogItems.features,t=a.properties&&a.properties.Values&&a.properties.Values.map(function(a){return a.replace(/ /gi,", ")})||[],n=this.objectIdField||"ObjectId";
a="string"===typeof d&&-1<d.toLowerCase().indexOf("nodata");var p=[];!d||l||a||(l={},l[n]=0,l=new ba(this.fullExtent,null,l),t=[d],l=[l]);if(!l)return[];this._updateResponseFieldNames(l,k);for(var u,q,n=0;n<l.length;n++){k=l[n];if(null!=d&&!a){u=t[n];q=this.renderingRule&&b&&0<b.length&&c&&0<c.length&&-1<c.indexOf(this.renderingRule.functionName)?b[c.indexOf(this.renderingRule.functionName)]:d;if("nodata"===u.toLowerCase()&&!e)continue;k.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(u,
"Raster.ItemPixelValue");k.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(q,"Raster.ServicePixelValue");this._updateFeatureWithMagDirValues(k,u);var r=this.fields&&0<this.fields.length;q=this.renderingRule&&A.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?r?u:d:q;this.renderingRule||(q=r?u:d);this._updateFeatureWithRasterAttributeTableValues(k,q)}k.sourceLayer=this;g&&this._updateFeatureWithDomainValues(k);if(c&&b&&c.length===b.length)for(u=0;u<c.length;u++)r=
"Raster.ServicePixelValue."+c[u],k.attributes[r]=this._formatAttributeValue(b[u],r);p.push(l[n])}return p};b.prototype._updateFeatureWithRasterAttributeTableValues=function(a,b){var d=this,c=this.rasterInfo&&this.rasterInfo.attributeTable||A.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,e=c&&c.features;if(e){var c=c.fields,g=c.map(function(a){return a.name}).filter(function(a){return"value"===a.toLowerCase()}),k=g&&g[0];if(k){var l=e.filter(function(a){return a.attributes[k]===
(null!=b?parseInt(b,10):null)});l&&l[0]&&c.forEach(function(b){var c=d.rasterAttributeTableFieldPrefix+b.name;a.attributes[c]=d._formatAttributeValue(l[0].attributes[b.name],c)})}}};b.prototype._updateFeatureWithMagDirValues=function(a,b){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var d=b.replace(" ",",").split(",").map(function(a){return parseFloat(a)});b=d.map(function(a){return[a]});d=d.map(function(a){return{minValue:a,
maxValue:a,noDataValue:null}});b=new ka({height:1,width:1,pixelType:"f32",pixels:b,statistics:d});this.pixelFilter({pixelBlock:b,extent:new w.Extent(0,0,0,0,this.spatialReference)});a.attributes["Raster.Magnitude"]=b.pixels[0][0];a.attributes["Raster.Direction"]=b.pixels[1][0]}};b.prototype._updateFeatureWithDomainValues=function(a){var b=this.fields&&this.fields.filter(function(a){return a.domain&&"coded-value"===a.domain.type});null!=b&&b.forEach(function(b){var d=a.attributes[b.name];if(null!=
d){var c=b.domain.codedValues.filter(function(a){return a.code===d})[0];c&&(a.attributes[b.name]=c.name)}})};b.prototype._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var d=this.fieldsIndex;d&&a.forEach(function(a){if(a&&a.attributes)for(var c=0;c<b.length;c++){var e=b[c];if(d.has(e)){var f=d.get(e).name;f!==e&&(a.attributes[e]=a.attributes[f],delete a.attributes[f])}}})}};b.prototype._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw",
"None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};b.prototype._isRFTJson=function(a){return a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};b.prototype._readCapabilities=function(a){var b=a.capabilities?a.capabilities.toLowerCase().split(",").map(function(a){return a.trim()}):["image","catalog"],c=a.currentVersion,e=a.advancedQueryCapabilities,m=a.maxRecordCount,g=-1<b.indexOf("image"),k="esriImageServiceDataTypeElevation"===a.serviceDataType,l=!!(a.spatialReference||
a.extent&&a.extent.spatialReference);return{operations:{supportsComputeHistograms:g,supportsExportImage:g,supportsIdentify:g,supportsMeasure:-1<b.indexOf("mensuration")&&l,supportsDownload:-1<b.indexOf("download"),supportsQuery:-1<b.indexOf("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&g,supportsProject:10.3<=c&&g,supportsComputeStatisticsHistograms:10.4<=c&&g,supportsQueryBoundary:10.6<=c&&g,supportsCalculateVolume:10.7<=c&&k,supportsComputePixelLocation:10.7<=c&&-1<b.indexOf("catalog")},
query:{supportsStatistics:!(!e||!e.supportsStatistics),supportsOrderBy:!(!e||!e.supportsOrderBy),supportsDistinct:!(!e||!e.supportsDistinct),supportsPagination:!(!e||!e.supportsPagination),supportsStandardizedQueriesOnly:!(!e||!e.useStandardizedQueries),maxRecordCount:m}}};c.__decorate([e.property()],b.prototype,"_functionRasterInfos",void 0);c.__decorate([e.property()],b.prototype,"_rasterJobHandler",void 0);c.__decorate([e.property()],b.prototype,"_symbolizer",void 0);c.__decorate([e.property()],
b.prototype,"_defaultServiceMosaicRule",void 0);c.__decorate([e.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],b.prototype,"readDefaultServiceMosaicRule",null);c.__decorate([e.property()],b.prototype,"_cachedRendererJson",void 0);c.__decorate([e.property()],b.prototype,"rasterAttributeTableFieldPrefix",void 0);c.__decorate([e.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],b.prototype,"rasterFunctionNamesIndex",null);c.__decorate([e.property({readOnly:!0,dependsOn:["url"]})],
b.prototype,"queryTask",null);c.__decorate([e.property()],b.prototype,"adjustAspectRatio",void 0);c.__decorate([e.property({readOnly:!0}),e.aliasOf("serviceRasterInfo.bandCount")],b.prototype,"bandCount",void 0);c.__decorate([e.property({type:[H.Integer],json:{write:!0}})],b.prototype,"bandIds",void 0);c.__decorate([e.reader("bandIds")],b.prototype,"readBandIds",null);c.__decorate([e.property({readOnly:!0,json:{read:!1}})],b.prototype,"capabilities",void 0);c.__decorate([e.reader("service","capabilities",
["capabilities","currentVersion","serviceDataType"])],b.prototype,"readCapabilities",null);c.__decorate([e.property({type:Number})],b.prototype,"compressionQuality",void 0);c.__decorate([e.writer("compressionQuality")],b.prototype,"writeCompressionQuality",null);c.__decorate([e.property({type:Number})],b.prototype,"compressionTolerance",void 0);c.__decorate([e.writer("compressionTolerance")],b.prototype,"writeCompressionTolerance",null);c.__decorate([e.property({json:{read:{source:"copyrightText"}}})],
b.prototype,"copyright",void 0);c.__decorate([e.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",void 0);c.__decorate([e.property({readOnly:!0,constructOnly:!0})],b.prototype,"exportImageServiceParameters",void 0);c.__decorate([e.property()],b.prototype,"rasterInfo",void 0);c.__decorate([e.property({readOnly:!0,type:[C]})],b.prototype,"fields",void 0);c.__decorate([e.property({readOnly:!0,
dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);c.__decorate([e.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],b.prototype,"format",null);c.__decorate([e.reader("service","format",["serviceDataType"])],b.prototype,"readFormat",null);c.__decorate([e.property({type:w.Extent})],b.prototype,"fullExtent",void 0);c.__decorate([e.property({readOnly:!0})],b.prototype,"hasMultidimensions",void 0);c.__decorate([e.property({json:{read:{source:"maxImageHeight"}}})],
b.prototype,"imageMaxHeight",void 0);c.__decorate([e.property({json:{read:{source:"maxImageWidth"}}})],b.prototype,"imageMaxWidth",void 0);c.__decorate([e.property({type:String,json:{type:Q.jsonValues,read:Q.read,write:Q.write}})],b.prototype,"interpolation",void 0);c.__decorate([e.property()],b.prototype,"minScale",void 0);c.__decorate([e.reader("service","minScale")],b.prototype,"readMinScale",null);c.__decorate([e.property()],b.prototype,"maxScale",void 0);c.__decorate([e.reader("service","maxScale")],
b.prototype,"readMaxScale",null);c.__decorate([e.property({type:B})],b.prototype,"mosaicRule",null);c.__decorate([e.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],b.prototype,"readMosaicRule",null);c.__decorate([e.writer("mosaicRule")],b.prototype,"writeMosaicRule",null);c.__decorate([e.property({readOnly:!0}),e.aliasOf("serviceRasterInfo.multidimensionalInfo")],b.prototype,"multidimensionalInfo",void 0);c.__decorate([e.property({json:{type:H.Integer}})],b.prototype,"noData",void 0);c.__decorate([e.writer("noData")],
b.prototype,"writeNoData",null);c.__decorate([e.property({type:String,json:{type:R.jsonValues,read:R.read,write:R.write}})],b.prototype,"noDataInterpretation",void 0);c.__decorate([e.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],b.prototype,"objectIdField",void 0);c.__decorate([e.reader("objectIdField")],b.prototype,"readObjectIdField",null);c.__decorate([e.property({readOnly:!0,dependsOn:["url"]})],b.prototype,"parsedUrl",null);c.__decorate([e.property({readOnly:!0}),e.aliasOf("serviceRasterInfo.pixelSize.x")],
b.prototype,"pixelSizeX",void 0);c.__decorate([e.property({readOnly:!0}),e.aliasOf("serviceRasterInfo.pixelSize.y")],b.prototype,"pixelSizeY",void 0);c.__decorate([e.property({type:Function})],b.prototype,"pixelFilter",void 0);c.__decorate([e.property()],b.prototype,"raster",void 0);c.__decorate([e.property()],b.prototype,"viewId",void 0);c.__decorate([e.property({types:U.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],
b.prototype,"renderer",void 0);c.__decorate([e.reader("renderer")],b.prototype,"readRenderer",null);c.__decorate([e.property(W.opacityDrawingInfo)],b.prototype,"opacity",void 0);c.__decorate([e.property({readOnly:!0}),e.aliasOf("serviceRasterInfo.attributeTable")],b.prototype,"rasterAttributeTable",void 0);c.__decorate([e.property({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],b.prototype,"rasterFields",null);c.__decorate([e.property({readOnly:!0})],b.prototype,"rasterFunctionInfos",
void 0);c.__decorate([e.property({type:E})],b.prototype,"renderingRule",null);c.__decorate([e.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],b.prototype,"readRenderingRule",null);c.__decorate([e.writer("renderingRule")],b.prototype,"writeRenderingRule",null);c.__decorate([e.property()],b.prototype,"serviceDataType",void 0);c.__decorate([e.property({readOnly:!0,type:w.SpatialReference})],b.prototype,"spatialReference",void 0);c.__decorate([e.reader("spatialReference",["spatialReference",
"extent"])],b.prototype,"readSpatialReference",null);c.__decorate([e.property({json:{type:S.jsonValues}})],b.prototype,"pixelType",void 0);c.__decorate([e.reader("pixelType")],b.prototype,"readPixelType",null);c.__decorate([e.writer("pixelType")],b.prototype,"writePixelType",null);c.__decorate([e.property({constructOnly:!0,type:I})],b.prototype,"serviceRasterInfo",void 0);c.__decorate([e.property()],b.prototype,"sourceJSON",void 0);c.__decorate([e.property(W.url)],b.prototype,"url",void 0);c.__decorate([e.property({readOnly:!0})],
b.prototype,"version",void 0);c.__decorate([e.reader("version",["currentVersion","fields","timeInfo"])],b.prototype,"readVersion",null);return b=c.__decorate([e.subclass("esri.layers.mixins.ArcGISImageService")],b)}(q)}});