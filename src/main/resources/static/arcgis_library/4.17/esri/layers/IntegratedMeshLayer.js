// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../core/Error ../core/Handles ../core/maybe ../core/MultiOriginJSONSupport ../core/watchUtils ../core/accessorSupport/decorators ../core/accessorSupport/decorators/persistable ./Layer ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/commonProperties ./support/I3SLayerDefinitions ./support/SceneModifications ../support/persistableUrlUtils".split(" "),function(z,A,b,f,l,g,m,n,d,p,q,r,t,u,v,w,
x,e,h,y){return function(k){function a(){for(var c=[],a=0;a<arguments.length;a++)c[a]=arguments[a];c=k.apply(this,c)||this;c.handles=new l;c.geometryType="mesh";c.operationalLayerType="IntegratedMeshLayer";c.type="integrated-mesh";c.nodePages=null;c.materialDefinitions=null;c.textureSetDefinitions=null;c.geometryDefinitions=null;c.serviceUpdateTimeStamp=null;c.profile="mesh-pyramids";c.modifications=null;c._modificationsSource=null;c.elevationInfo=null;c.path=null;return c}b.__extends(a,k);a.prototype.destroy=
function(){this.handles.destroy()};a.prototype.initialize=function(){var c=this;this.handles.add(n.on(this,"modifications","after-changes",function(){return c.modifications=c.modifications},null,null,!0))};a.prototype.normalizeCtorArgs=function(c,a){return"string"===typeof c?b.__assign({url:c},a):c};a.prototype.readModifications=function(c,a,b){this._modificationsSource={url:y.fromJSON(c,b),context:b}};a.prototype.load=function(c){return b.__awaiter(this,void 0,void 0,function(){return b.__generator(this,
function(a){this.addResolvingPromise(this._doLoad(c));return[2,this]})})};a.prototype._doLoad=function(c){return b.__awaiter(this,void 0,void 0,function(){var a,d;return b.__generator(this,function(b){switch(b.label){case 0:a=g.get(c,"signal"),b.label=1;case 1:return b.trys.push([1,3,,4]),[4,this.loadFromPortal({supportedTypes:["Scene Service"]},c)];case 2:return b.sent(),[3,4];case 3:return b.sent(),[3,4];case 4:return[4,this._fetchService(a)];case 5:return b.sent(),g.isSome(this._modificationsSource)?
[4,h.fromUrl(this._modificationsSource.url,this.spatialReference,c)]:[3,7];case 6:d=b.sent(),this.setAtOrigin("modifications",d,this._modificationsSource.context.origin),this._modificationsSource=null,b.label=7;case 7:return[4,this._verifyRootNodeAndUpdateExtent(this.nodePages,a)];case 8:return b.sent(),[2]}})})};a.prototype.beforeSave=function(){if(!g.isNone(this._modificationsSource))return this.load().then(function(){},function(){})};a.prototype.saveAs=function(c,a){return b.__awaiter(this,void 0,
void 0,function(){var d=this;return b.__generator(this,function(e){return[2,this._debouncedSaveOperations(1,b.__assign(b.__assign({},a),{getTypeKeywords:function(){return d._getTypeKeywords()},portalItemLayerType:"integrated-mesh"}),c)]})})};a.prototype.save=function(){return b.__awaiter(this,void 0,void 0,function(){var a,d=this;return b.__generator(this,function(b){a={getTypeKeywords:function(){return d._getTypeKeywords()},portalItemLayerType:"integrated-mesh"};return[2,this._debouncedSaveOperations(0,
a)]})})};a.prototype.validateLayer=function(a){if(a.layerType&&"IntegratedMesh"!==a.layerType)throw new f("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new f("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new f("layer:service-version-too-new",
"Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});};a.prototype._getTypeKeywords=function(){return["IntegratedMeshLayer"]};b.__decorate([d.property({type:String,readOnly:!0})],a.prototype,"geometryType",void 0);b.__decorate([d.property({type:["show","hide"]})],a.prototype,"listMode",void 0);b.__decorate([d.property({type:["IntegratedMeshLayer"]})],a.prototype,"operationalLayerType",void 0);b.__decorate([d.property({json:{read:!1},readOnly:!0})],a.prototype,
"type",void 0);b.__decorate([d.property({type:e.I3SNodePageDefinition,readOnly:!0})],a.prototype,"nodePages",void 0);b.__decorate([d.property({type:[e.I3SMaterialDefinition],readOnly:!0})],a.prototype,"materialDefinitions",void 0);b.__decorate([d.property({type:[e.I3STextureSetDefinition],readOnly:!0})],a.prototype,"textureSetDefinitions",void 0);b.__decorate([d.property({type:[e.I3SGeometryDefinition],readOnly:!0})],a.prototype,"geometryDefinitions",void 0);b.__decorate([d.property({readOnly:!0})],
a.prototype,"serviceUpdateTimeStamp",void 0);b.__decorate([d.property({type:h}),p.persistable({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],a.prototype,"modifications",void 0);b.__decorate([d.reader(["web-scene","portal-item"],"modifications")],a.prototype,"readModifications",null);b.__decorate([d.property(x.elevationInfo)],a.prototype,"elevationInfo",void 0);b.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,
write:!0}},read:!1}})],a.prototype,"path",void 0);return a=b.__decorate([d.subclass("esri.layers.IntegratedMeshLayer")],a)}(w.SceneService(r.ArcGISService(t.OperationalLayer(u.PortalLayer(v.ScaleRangeLayer(m.MultiOriginJSONMixin(q)))))))});