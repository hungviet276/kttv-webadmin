// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../PopupTemplate ../request ../core/arrayUtils ../core/Error ../core/lang ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ./Layer ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./pointCloudFilters/typeUtils ./support/commonProperties ./support/Field ./support/fieldProperties ./support/FieldsIndex ../popup/ExpressionInfo ../renderers/support/pointCloud/typeUtils ../support/popupUtils".split(" "),
function(M,N,c,r,t,l,g,u,v,w,x,y,z,A,d,B,C,D,E,F,G,H,f,h,I,J,m,n,K){var p=v.getLogger("esri.layers.PointCloudLayer"),L=I.defineFieldProperties();return function(q){function b(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];a=q.apply(this,a)||this;a.operationalLayerType="PointCloudLayer";a.popupEnabled=!0;a.popupTemplate=null;a.opacity=1;a.filters=[];a.fields=null;a.outFields=null;a.path=null;a.legendEnabled=!0;a.renderer=null;a.type="point-cloud";return a}c.__extends(b,q);b.prototype.normalizeCtorArgs=
function(a,b){return"string"===typeof a?c.__assign({url:a},b):a};Object.defineProperty(b.prototype,"defaultPopupTemplate",{get:function(){return this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return new J(this.fields)},enumerable:!1,configurable:!0});b.prototype.getFieldDomain=function(a){return(a=this.fieldsIndex.get(a))&&a.domain?a.domain:null};b.prototype.readServiceFields=function(a,b,c){return Array.isArray(a)?
a.map(function(a){var b=new h;"FieldTypeInteger"===a.type&&(a=u.clone(a),a.type="esriFieldTypeInteger");b.read(a,c);return b}):Array.isArray(b.attributeStorageInfo)?b.attributeStorageInfo.map(function(a){return new h({name:a.name,type:"ELEVATION"===a.name?"double":"integer"})}):null};Object.defineProperty(b.prototype,"elevationInfo",{set:function(a){this._set("elevationInfo",a);this._validateElevationInfo()},enumerable:!1,configurable:!0});b.prototype.writeRenderer=function(a,b,c,d){y.setDeepValue("layerDefinition.drawingInfo.renderer",
a.write(null,d),b)};b.prototype.load=function(a){var b=this,c=w.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).then(function(){return b._fetchService(c)},function(){return b._fetchService(c)});this.addResolvingPromise(a);return z.resolve(this)};b.prototype.createPopupTemplate=function(a){a=K.createPopupTemplate(this,a);this.formatPopupTemplateReturnsField(a);this.formatPopupTemplateRGBField(a);return a};b.prototype.formatPopupTemplateReturnsField=function(a){var b=
this.fieldsIndex.get("RETURNS");if(b){var d=l.find(a.fieldInfos,function(a){return a.fieldName===b.name});if(d){var e=new m({name:"pcl-returns-decoded",title:b.alias||b.name,expression:"\n        var returnValue \x3d $feature."+b.name+';\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      '});a.expressionInfos=c.__spreadArrays(a.expressionInfos||[],[e]);d.fieldName="expression/pcl-returns-decoded"}}};b.prototype.formatPopupTemplateRGBField=function(a){var b=this.fieldsIndex.get("RGB");
if(b){var d=l.find(a.fieldInfos,function(a){return a.fieldName===b.name});if(d){var e=new m({name:"pcl-rgb-decoded",title:b.alias||b.name,expression:"\n        var rgb \x3d $feature."+b.name+';\n        var red \x3d Floor(rgb / 65536, 0);\n        var green \x3d Floor((rgb - (red * 65536)) / 256,0);\n        var blue \x3d rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      '});a.expressionInfos=c.__spreadArrays(a.expressionInfos||[],[e]);d.fieldName=
"expression/pcl-rgb-decoded"}}};b.prototype.queryCachedStatistics=function(a,b){return c.__awaiter(this,void 0,void 0,function(){var d,e,k,f,h;return c.__generator(this,function(c){switch(c.label){case 0:return[4,this.load(b)];case 1:c.sent();if(!this.attributeStorageInfo)throw new g("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");d=this.fieldsIndex.get(a);if(!d)throw new g("pointcloudlayer:field-unexisting","Field '"+a+"' does not exist on the layer");e=0;
for(k=this.attributeStorageInfo;e<k.length;e++)if(f=k[e],f.name===d.name)return h=A.join(this.parsedUrl.path,"./statistics/"+f.key),[2,t(h,{query:{f:"json"},responseType:"json",signal:b?b.signal:null}).then(function(a){return a.data})];throw new g("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available");}})})};b.prototype.saveAs=function(a,b){return c.__awaiter(this,void 0,void 0,function(){var d=this;return c.__generator(this,function(e){return[2,this._debouncedSaveOperations(1,
c.__assign(c.__assign({},b),{getTypeKeywords:function(){return d._getTypeKeywords()},portalItemLayerType:"point-cloud"}),a)]})})};b.prototype.save=function(){return c.__awaiter(this,void 0,void 0,function(){var a,b=this;return c.__generator(this,function(c){a={getTypeKeywords:function(){return b._getTypeKeywords()},portalItemLayerType:"point-cloud"};return[2,this._debouncedSaveOperations(0,a)]})})};b.prototype.validateLayer=function(a){if(a.layerType&&"PointCloud"!==a.layerType)throw new g("pointcloudlayer:layer-type-not-supported",
"PointCloudLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new g("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(2<this.version.major)throw new g("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});};b.prototype.hasCachedStatistics=function(a){return null!=
this.attributeStorageInfo&&this.attributeStorageInfo.some(function(b){return b.name===a})};b.prototype._getTypeKeywords=function(){return["PointCloud"]};b.prototype._validateElevationInfo=function(){var a=this.elevationInfo;a&&("absolute-height"!==a.mode&&p.warn(".elevationInfo\x3d","Point cloud layers only support absolute-height elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&p.warn(".elevationInfo\x3d","Point cloud layers do not support featureExpressionInfo"))};
c.__decorate([d.property({type:["PointCloudLayer"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property(f.popupEnabled)],b.prototype,"popupEnabled",void 0);c.__decorate([d.property({type:r,json:{name:"popupInfo",write:!0}})],b.prototype,"popupTemplate",void 0);c.__decorate([d.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo"]})],b.prototype,"defaultPopupTemplate",null);c.__decorate([d.property({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,
read:!1}}}})],b.prototype,"opacity",void 0);c.__decorate([d.property({type:["show","hide"]})],b.prototype,"listMode",void 0);c.__decorate([d.property({types:[H.types],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],b.prototype,"filters",void 0);c.__decorate([d.property({type:[h]})],b.prototype,"fields",void 0);c.__decorate([d.property({readOnly:!0,dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);c.__decorate([d.reader("service","fields",["fields",
"attributeStorageInfo"])],b.prototype,"readServiceFields",null);c.__decorate([d.property(L.outFields)],b.prototype,"outFields",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"attributeStorageInfo",void 0);c.__decorate([d.property(f.elevationInfo)],b.prototype,"elevationInfo",null);c.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],b.prototype,"path",void 0);c.__decorate([d.property(f.legendEnabled)],b.prototype,
"legendEnabled",void 0);c.__decorate([d.property({types:n.types,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:n.types},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],b.prototype,"renderer",void 0);c.__decorate([d.writer("renderer")],b.prototype,"writeRenderer",null);c.__decorate([d.property({json:{read:!1},readOnly:!0})],b.prototype,"type",void 0);return b=c.__decorate([d.subclass("esri.layers.PointCloudLayer")],
b)}(G.SceneService(C.ArcGISService(D.OperationalLayer(E.PortalLayer(F.ScaleRangeLayer(x.MultiOriginJSONMixin(B)))))))});