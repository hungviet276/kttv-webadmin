// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../geometry ../../rasterRenderers ../../request ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/RasterJobHandler ../support/TileInfo ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer".split(" "),function(A,e,b,l,q,r,t,u,d,v,w,x,m,y,n,k,z){Object.defineProperty(e,"__esModule",
{value:!0});e.ImageryTileMixin=void 0;var p=t.getLogger("esri.layers.mixins.ImageryTileMixin");e.ImageryTileMixin=function(e){return function(e){function a(){var c=null!==e&&e.apply(this,arguments)||this;c._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};c.bandIds=null;c.copyright=null;c.fullExtent=null;c.interpolation="nearest";c.raster=null;c.rasterInfo=null;c.sourceJSON=null;c.spatialReference=null;c.tileInfo=null;c.symbolizer=null;return c}b.__extends(a,e);Object.defineProperty(a.prototype,
"multidimensionalDefinition",{set:function(c){this.raster&&(this._sliceId=this.raster.getSliceIndex(c));this._set("multidimensionalDefinition",c)},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"url",{set:function(c){this._set("url",w.sanitizeUrl(c,p))},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"renderer",{set:function(c){this._set("renderer",c);this.updateRenderer()},enumerable:!1,configurable:!0});a.prototype.updateRenderer=function(){return b.__awaiter(this,
void 0,void 0,function(){var c;return b.__generator(this,function(a){switch(a.label){case 0:if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return[2];c=this._rasterJobHandler.instance;if(!c)return[2];this.symbolizer.renderer=this.renderer;this.symbolizer.bind();return[4,c.updateSymbolizer(this.symbolizer)];case 1:return a.sent(),this._cachedRendererJson=this.renderer.toJSON(),[2]}})})};a.prototype.applyRenderer=function(c,a){return b.__awaiter(this,void 0,
void 0,function(){var g,f,d,e;return b.__generator(this,function(h){switch(h.label){case 0:g=c&&c.pixelBlock;if(!(g&&g.pixels&&0<g.pixels.length))return[2,null];this.updateRenderer();d=this._rasterJobHandler.instance;e=this.bandIds;return d?[4,d.symbolize(b.__assign(b.__assign({},c),{simpleStretchParams:a,bandIds:e}))]:[3,2];case 1:return f=h.sent(),[3,3];case 2:f=this.symbolizer.symbolize(b.__assign(b.__assign({},c),{simpleStretchParams:a,bandIds:e})),h.label=3;case 3:return[2,f]}})})};a.prototype.getTileUrl=
function(c,a,b){return"RasterTileServer"===this.raster.datasetFormat?this.url+"/tile/"+c+"/"+a+"/"+b:""};a.prototype.getCompatibleTileInfo=function(c,a){if(!this.loaded)return null;var b=v.getInfo(c);return n.create({size:256,spatialReference:c,origin:b?{x:b.origin[0],y:b.origin[1]}:{x:a.xmin,y:a.ymax}})};a.prototype.getCompatibleFullExtent=function(c){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(c)?this._compatibleFullExtent:this._compatibleFullExtent=
this.raster.computeExtent(c):null};a.prototype.fetchTile=function(c,a,d,f){void 0===f&&(f={});return b.__awaiter(this,void 0,void 0,function(){var g,e;return b.__generator(this,function(h){switch(h.label){case 0:return f.requestAsImageElement?(g=this.getTileUrl(c,a,d),[2,r(g,{responseType:"image",query:{sliceId:this._sliceId,_ts:f.timestamp},signal:f.signal}).then(function(c){return c.data})]):[4,this._initJobHandler()];case 1:return h.sent(),this.multidimensionalDefinition&&(e=this._sliceId,f=b.__assign({multidimensionalDefinition:this.multidimensionalDefinition,
sliceId:e},f)),"raster-shaded-relief"===this.renderer.type&&(f=b.__assign({buffer:{cols:1,rows:1}},f)),[2,this.raster.fetchTile(c,a,d,f)]}})})};a.prototype.fetchPixels=function(c,a,d,f){return b.__awaiter(this,void 0,void 0,function(){var g;return b.__generator(this,function(e){switch(e.label){case 0:return[4,this._initJobHandler()];case 1:return e.sent(),this.multidimensionalDefinition&&(g=this._sliceId,f=b.__assign({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:g},f)),[2,this.raster.fetchPixels(c,
a,d,f)]}})})};a.prototype.identify=function(c,a){void 0===a&&(a={});this.multidimensionalDefinition&&!a.multidimensionalDefinition&&(a=b.__assign(b.__assign({},a),{multidimensionalDefinition:this.multidimensionalDefinition}));return this.raster.identify(c,a)};a.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};a.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};a.prototype._configDefaultSettings=
function(){this._configDefaultInterpolation();this._configDefaultSlice();this._configDefaultRenderer()};a.prototype._initJobHandler=function(){var a=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;var b=new y;this._rasterJobHandler.connectionPromise=b.initialize().then(function(){a._rasterJobHandler.instance=b;a.raster.rasterJobHandler=b;a.renderer&&a.updateRenderer()}).catch(function(){return null});return this._rasterJobHandler.connectionPromise};
a.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this.raster.rasterJobHandler=null};a.prototype._configDefaultInterpolation=function(){var a;if(null==this.interpolation){var b=k.getDefaultInterpolation(this.rasterInfo,this.raster.tileType,null===(a=this.sourceJSON)||void 0===a?void 0:a.defaultResamplingMethod);this._set("interpolation",
b)}};a.prototype._configDefaultSlice=function(){var a=this.raster.rasterInfo.multidimensionalInfo;if(u.isSome(a)){if(!this.multidimensionalDefinition){var b=a.variables[0],d=[];b.dimensions.forEach(function(a){d.push(new m({variableName:b.name,dimensionName:a.name,values:a.hasRegularIntervals?a.extent[0]:a.values[0],isSlice:!0}))});this.multidimensionalDefinition=d}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}};a.prototype._configDefaultRenderer=function(){var a,b=this.raster.rasterInfo;
this.bandIds||(this.bandIds=k.getDefaultBandCombination(b));this.renderer||(this.renderer=k.createDefaultRenderer(b,{bandIds:this.bandIds,variableName:null===(a=this.multidimensionalDefinition)||void 0===a?void 0:a[0].variableName}));this.symbolizer?(this.symbolizer.renderer=this.renderer,this.symbolizer.rasterInfo=b):this.symbolizer=new z({renderer:this.renderer,rasterInfo:b});this.symbolizer.bind()||p.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")};b.__decorate([d.property()],
a.prototype,"_cachedRendererJson",void 0);b.__decorate([d.property()],a.prototype,"_sliceId",void 0);b.__decorate([d.property()],a.prototype,"_compatibleFullExtent",void 0);b.__decorate([d.property()],a.prototype,"_rasterJobHandler",void 0);b.__decorate([d.property()],a.prototype,"bandIds",void 0);b.__decorate([d.property()],a.prototype,"copyright",void 0);b.__decorate([d.property({type:l.Extent}),d.aliasOf("rasterInfo.extent")],a.prototype,"fullExtent",void 0);b.__decorate([d.property()],a.prototype,
"interpolation",void 0);b.__decorate([d.property({type:[m]})],a.prototype,"multidimensionalDefinition",null);b.__decorate([d.property()],a.prototype,"raster",void 0);b.__decorate([d.property({readOnly:!0}),d.aliasOf("raster.rasterInfo")],a.prototype,"rasterInfo",void 0);b.__decorate([d.property()],a.prototype,"sourceJSON",void 0);b.__decorate([d.property({type:l.SpatialReference}),d.aliasOf("rasterInfo.spatialReference")],a.prototype,"spatialReference",void 0);b.__decorate([d.property({type:n,dependsOn:["rasterInfo"]}),
d.aliasOf("rasterInfo.storageInfo.tileInfo")],a.prototype,"tileInfo",void 0);b.__decorate([d.property(x.url)],a.prototype,"url",null);b.__decorate([d.property({types:q.rasterRendererTypes})],a.prototype,"renderer",null);b.__decorate([d.property()],a.prototype,"symbolizer",void 0);return a=b.__decorate([d.subclass("esri.layers.ImageryTileMixin")],a)}(e)}});