// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../core/Error ../../../core/promiseUtils ../../../geometry/support/contains ../../../geometry/support/intersects ../../../geometry/support/jsonUtils ../../../geometry/support/spatialReferenceUtils ../contains ../featureConversionUtils ../OptimizedGeometry ./projectionSupport ./utils @dojo/framework/shim/Promise".split(" "),function(u,c,k,g,h,p,v,e,l,q,r,t,w,m){function n(){return new Promise(function(a,d){u(["../../../geometry/geometryEngineJSON"],a,d)})}Object.defineProperty(c,
"__esModule",{value:!0});c.canQueryWithRBush=c.checkSpatialQuerySupport=c.getSpatialQueryOperator=c.getGeodesicBufferOperator=c.importGeometryEngine=void 0;var x={esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"intersects",esriSpatialRelIndexIntersects:null,esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:null},
y={esriSpatialRelIntersects:!0,esriSpatialRelContains:!0,esriSpatialRelWithin:!0,esriSpatialRelCrosses:!0,esriSpatialRelDisjoint:!0,esriSpatialRelTouches:!0,esriSpatialRelOverlaps:!0,esriSpatialRelEnvelopeIntersects:!0,esriSpatialRelIndexIntersects:!1,esriSpatialRelRelation:!1},z={esriGeometryPoint:!0,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!0},A={esriGeometryPoint:!0,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!1};
c.importGeometryEngine=n;c.getGeodesicBufferOperator=function(){return n().then(function(a){return a.geodesicBuffer})};c.getSpatialQueryOperator=function(a,d,b,c,f){if(e.isPolygon(d)&&"esriGeometryPoint"===b&&("esriSpatialRelIntersects"===a||"esriSpatialRelContains"===a)){var g=r.convertFromPolygon(new t.default,d,!1,!1);return h.resolve(function(a){return q.polygonContainsPoint(g,!1,!1,a)})}if(e.isPolygon(d)&&"esriGeometryMultipoint"===b){var k=r.convertFromPolygon(new t.default,d,!1,!1);if("esriSpatialRelContains"===
a)return h.resolve(function(a){return q.polygonContainsMultipoint(k,!1,!1,a,c,f)})}if(e.isExtent(d)&&"esriGeometryPoint"===b&&("esriSpatialRelIntersects"===a||"esriSpatialRelContains"===a))return h.resolve(function(a){return p.extentContainsPoint(d,m.getGeometry(b,c,f,a))});if(e.isExtent(d)&&"esriGeometryMultipoint"===b&&"esriSpatialRelContains"===a)return h.resolve(function(a){return p.extentContainsMultipoint(d,m.getGeometry(b,c,f,a))});if(e.isExtent(d)&&"esriSpatialRelIntersects"===a){var l=v.getExtentIntersector(b);
return h.resolve(function(a){return l(d,m.getGeometry(b,c,f,a))})}return n().then(function(e){var g=e[x[a]].bind(null,d.spatialReference,d);return function(a){return g(m.getGeometry(b,c,f,a))}})};c.checkSpatialQuerySupport=function(a,d,b){return k.__awaiter(this,void 0,void 0,function(){var c,f;return k.__generator(this,function(h){c=a.spatialRel;f=a.geometry;if(!f)return[2];if(!0!==y[c])throw new g("feature-store:unsupported-query","Unsupported query spatial relationship",{query:a});if(!l.isValid(f.spatialReference)||
!l.isValid(b))return[2];if(!0!==z[e.getJsonType(f)])throw new g("feature-store:unsupported-query","Unsupported query geometry type",{query:a});if(!0!==A[d])throw new g("feature-store:unsupported-query","Unsupported layer geometry type",{query:a});return a.outSR?[2,w.checkProjectionSupport(a.geometry&&a.geometry.spatialReference,a.outSR)]:[2]})})};c.canQueryWithRBush=function(a){if(e.isExtent(a))return!0;if(e.isPolygon(a)){var c=0;for(a=a.rings;c<a.length;c++){var b=a[c];if(5!==b.length||b[0][0]!==
b[1][0]||b[0][0]!==b[4][0]||b[2][0]!==b[3][0]||b[0][1]!==b[3][1]||b[0][1]!==b[4][1]||b[1][1]!==b[2][1])return!1}return!0}return!1}});