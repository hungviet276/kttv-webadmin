// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../request ../core/deprecate ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ../geometry/HeightModelInfo ./Layer ./mixins/ArcGISCachedService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./support/commonProperties ./support/LercDecoder @dojo/framework/shim/Promise".split(" "),function(n,E,c,h,p,q,r,t,u,k,v,d,w,x,y,z,A,B,C,l){var f=r.getLogger("esri.layers.ElevationLayer");
return function(m){function a(){for(var b=[],a=0;a<arguments.length;a++)b[a]=arguments[a];b=m.apply(this,b)||this;b.copyright=null;b.heightModelInfo=null;b.path=null;b.opacity=1;b.operationalLayerType="ArcGISTiledElevationServiceLayer";b.sourceJSON=null;b.type="elevation";b.url=null;b.version=null;b._lercDecoder=l.acquireInstance();return b}c.__extends(a,m);a.prototype.normalizeCtorArgs=function(b,a){return"string"===typeof b?c.__assign({url:b},a):b};a.prototype.destroy=function(){l.releaseInstance(this._lercDecoder);
this._lercDecoder=null};Object.defineProperty(a.prototype,"minScale",{get:function(){},set:function(b){this.constructed&&f.warn(this.declaredClass+".minScale support has been removed (since 4.5)")},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"maxScale",{get:function(){},set:function(b){this.constructed&&f.warn(this.declaredClass+".maxScale support has been removed (since 4.5)")},enumerable:!1,configurable:!0});a.prototype.readVersion=function(b,a){(b=a.currentVersion)||(b=9.3);
return b};a.prototype.load=function(b){var a=this,c=t.isSome(b)?b.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:function(b){for(var a=0;a<b.typeKeywords.length;a++)if("elevation 3d layer"===b.typeKeywords[a].toLowerCase())return!0;throw new q("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"});}},b).then(function(){return a._fetchImageService(c)},
function(){return a._fetchImageService(c)}));return k.resolve(this)};a.prototype.fetchTile=function(b,a,c,e){var d=this;void 0===e&&(e={});null!=e&&"number"===typeof e&&(p.deprecated(f,"Passing 'noDataValue' directly as a parameter",{replacement:"use { noDataValue } options object instead",version:"4.12"}),e={noDataValue:e});var D={responseType:"array-buffer",signal:e.signal},g={noDataValue:e.noDataValue,returnFileInfo:!0};return this.load().then(function(){return d._fetchTileAvailability(b,a,c,e)}).then(function(){return h(d.getTileUrl(b,
a,c),D)}).then(function(a){return d._lercDecoder.decode(a.data,g,e.signal)}).then(function(a){return{values:a.pixelData,width:a.width,height:a.height,maxZError:a.fileInfo.maxZError,noDataValue:a.noDataValue,minValue:a.minValue,maxValue:a.maxValue}})};a.prototype.getTileUrl=function(a,d,g){var b=!this.tilemapCache&&this.supportsBlankTile,b=v.objectToQuery(c.__assign(c.__assign({},this.parsedUrl.query),{blankTile:b?!1:null}));return this.parsedUrl.path+"/tile/"+a+"/"+d+"/"+g+(b?"?"+b:"")};a.prototype.queryElevation=
function(a,c){var b=this;return this._importElevationQuery().then(function(d){return(new d.ElevationQuery).query(b,a,c)})};a.prototype.createElevationSampler=function(a,c){var b=this;return this._importElevationQuery().then(function(d){return(new d.ElevationQuery).createSampler(b,a,c)})};a.prototype._fetchTileAvailability=function(a,c,d,e){return this.tilemapCache?this.tilemapCache.fetchAvailability(a,c,d,e):k.resolve("unknown")};a.prototype._fetchImageService=function(a){return c.__awaiter(this,
void 0,void 0,function(){var b,d;return c.__generator(this,function(e){switch(e.label){case 0:if(this.sourceJSON)return[2,this.sourceJSON];b={query:c.__assign({f:"json"},this.parsedUrl.query),responseType:"json",signal:a};return[4,h(this.parsedUrl.path,b)];case 1:return d=e.sent(),d.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=d.data,this.read(d.data,{origin:"service",url:this.parsedUrl}),[2]}})})};a.prototype._importElevationQuery=function(){return new Promise(function(a,
c){n(["./support/ElevationQuery"],a,c)})};c.__decorate([d.property({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0);c.__decorate([d.property({readOnly:!0,type:w})],a.prototype,"heightModelInfo",void 0);c.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0);c.__decorate([d.property({type:["show","hide"]})],a.prototype,"listMode",void 0);c.__decorate([d.property({json:{read:!1,write:!1,origins:{service:{read:!1,
write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"minScale",null);c.__decorate([d.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"maxScale",null);c.__decorate([d.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0);c.__decorate([d.property({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,
"operationalLayerType",void 0);c.__decorate([d.property()],a.prototype,"sourceJSON",void 0);c.__decorate([d.property({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0);c.__decorate([d.property(C.url)],a.prototype,"url",void 0);c.__decorate([d.property()],a.prototype,"version",void 0);c.__decorate([d.reader("version",["currentVersion"])],a.prototype,"readVersion",null);return a=c.__decorate([d.subclass("esri.layers.ElevationLayer")],a)}(y.ArcGISCachedService(z.ArcGISService(A.OperationalLayer(B.PortalLayer(u.MultiOriginJSONMixin(x))))))});