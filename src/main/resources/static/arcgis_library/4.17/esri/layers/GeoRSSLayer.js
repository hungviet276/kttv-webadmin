// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../config ../request ../symbols ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/commonProperties ../symbols/SimpleFillSymbol ../symbols/SimpleLineSymbol".split(" "),function(y,z,b,f,g,h,k,l,m,c,n,p,q,r,t,u,v,w,x){return function(e){function a(){for(var d=[],a=0;a<arguments.length;a++)d[a]=
arguments[a];d=e.apply(this,d)||this;d.description=null;d.title=null;d.lineSymbol=null;d.pointSymbol=null;d.polygonSymbol=null;d.outSpatialReference=null;d.url=null;d.type="geo-rss";return d}b.__extends(a,e);a.prototype.normalizeCtorArgs=function(a,c){return"string"===typeof a?b.__assign({url:a},c):a};a.prototype.readFeatureCollections=function(a,b){b.featureCollection.layers.forEach(function(a){(a=a.layerDefinition.drawingInfo.renderer.symbol)&&"esriSFS"===a.type&&a.outline&&-1!==a.outline.style.indexOf("esriSFS")&&
(a.outline.style="esriSLSSolid")});return b.featureCollection.layers};a.prototype.load=function(a){var b=this,c=k.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},a).then(function(){return b._fetchService(c)},function(){return b._fetchService(c)}));return m.resolve(this)};a.prototype._fetchService=function(a){return b.__awaiter(this,void 0,void 0,function(){var c;return b.__generator(this,function(b){switch(b.label){case 0:return[4,
g(f.geoRSSServiceUrl,{query:{url:this.url,refresh:this.loaded?!0:void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:a})];case 1:return c=b.sent().data,this.read(c,{origin:"service"}),[2]}})})};b.__decorate([c.property()],a.prototype,"description",void 0);b.__decorate([c.property()],a.prototype,"title",void 0);b.__decorate([c.property()],a.prototype,"featureCollections",void 0);b.__decorate([c.reader("service","featureCollections",["featureCollection.layers"])],
a.prototype,"readFeatureCollections",null);b.__decorate([c.property({type:x})],a.prototype,"lineSymbol",void 0);b.__decorate([c.property({type:["show","hide"]})],a.prototype,"listMode",void 0);b.__decorate([c.property({types:h.symbolTypes})],a.prototype,"pointSymbol",void 0);b.__decorate([c.property({type:w})],a.prototype,"polygonSymbol",void 0);b.__decorate([c.property()],a.prototype,"outSpatialReference",void 0);b.__decorate([c.property(v.url)],a.prototype,"url",void 0);b.__decorate([c.property({readOnly:!0,
json:{read:!1},value:"geo-rss"})],a.prototype,"type",void 0);return a=b.__decorate([c.subclass("esri.layers.GeoRSSLayer")],a)}(p.BlendLayer(t.RefreshableLayer(q.OperationalLayer(r.PortalLayer(u.ScaleRangeLayer(l.MultiOriginJSONMixin(n)))))))});