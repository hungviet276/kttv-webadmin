// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ./CheckerBoard.glsl ../../../webgl/Program ../../../webgl/renderState ../../../webgl/renderState @dojo/framework/shim/Promise".split(" "),function(m,c,d,h,n,e,f,p,q,r,t,g){Object.defineProperty(c,"__esModule",{value:!0});c.CheckerBoardTechniqueConfiguration=
c.CheckerBoardTechnique=void 0;e=function(b){function a(){return null!==b&&b.apply(this,arguments)||this}d.__extends(a,b);a.prototype.initializeProgram=function(k){var l=a.shader.get().build();return new r(k.rctx,l.generateSource("vertex"),l.generateSource("fragment"),p.Default3D)};a.prototype.bindPass=function(k,a,b){h.View.bindProjectionMatrix(this.program,b.camera.projectionMatrix);this.program.setUniform2fv("size",a.size);this.program.setUniform4fv("color1",a.color1);this.program.setUniform4fv("color2",
a.color2)};a.prototype.bindDraw=function(a){h.View.bindView(this.program,a)};a.prototype.initializePipeline=function(){var a=this.configuration;return g.makePipelineState({blending:a.transparent&&t.separateBlendingParams(770,1,771,771),polygonOffset:a.polygonOffset&&{factor:0,units:-25},depthTest:{func:513},depthWrite:a.writeDepth&&g.defaultDepthWriteParams,colorWrite:g.defaultColorWriteParams})};a.shader=new n.ReloadableShaderModule(q,function(){return new Promise(function(a,b){m(["./CheckerBoard.glsl"],
a,b)})});return a}(e.ShaderTechnique);c.CheckerBoardTechnique=e;e=function(b){function a(){var a=null!==b&&b.apply(this,arguments)||this;a.transparent=!1;a.writeDepth=!0;a.polygonOffset=!1;return a}d.__extends(a,b);d.__decorate([f.parameter()],a.prototype,"transparent",void 0);d.__decorate([f.parameter()],a.prototype,"writeDepth",void 0);d.__decorate([f.parameter()],a.prototype,"polygonOffset",void 0);return a}(f.ShaderTechniqueConfiguration);c.CheckerBoardTechniqueConfiguration=e});