// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/scheduling","./GamepadInputDevice","./GamepadState"],function(h,e,k,l,f){Object.defineProperty(e,"__esModule",{value:!0});e.GamepadSource=void 0;h=function(){function b(a,d){var c=this;this.element=a;this.input=d;this._hasEventListeners=!1;this.onConnectGamepad=function(a){c.connectGamepad(a.gamepad)};this.onDisconnectGamepad=function(a){a=a.gamepad;var d=a.index,b=c.inputDevices[d];b&&(c.emitGamepadEvent(a,f.extractState(b),!1),c.inputDevices.splice(d,1),
c.latestUpdate.splice(d,1),c.input.gamepad.devices.remove(b),c.ensurePollingState())};this.frameTask=null;this.latestUpdate=[];this.inputDevices=[];this.callback=null;if(this.supported="getGamepads"in window.navigator)this.forEachGamepad(this.connectGamepad),window.addEventListener("gamepadconnected",this.onConnectGamepad),window.addEventListener("gamepaddisconnected",this.onDisconnectGamepad),this.ensurePollingState()}b.prototype.destroy=function(){this.hasEventListeners=!1;this.supported&&(window.removeEventListener("gamepadconnected",
this.onConnectGamepad),window.removeEventListener("gamepaddisconnected",this.onDisconnectGamepad))};Object.defineProperty(b.prototype,"hasEventListeners",{set:function(a){this._hasEventListeners!==a&&(this._hasEventListeners=a,this.ensurePollingState())},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"eventsEnabled",{get:function(){return this.supported&&0<this.inputDevices.length&&this._hasEventListeners},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"onEvent",
{set:function(a){this.callback=a},enumerable:!1,configurable:!0});b.prototype.connectGamepad=function(a){var d=new l(a);"unknown"!==d.deviceType&&(this.inputDevices[a.index]=d,this.input.gamepad.devices.add(d));this.ensurePollingState()};b.prototype.ensurePollingState=function(){this.eventsEnabled?this.startPolling():this.stopPolling()};b.prototype.startPolling=function(){var a=this;null==this.frameTask&&(this.frameTask=k.addFrameTask({update:function(){return a.readGamepadState()}}))};b.prototype.stopPolling=
function(){null!=this.frameTask&&(this.frameTask.remove(),this.frameTask=null,this.latestUpdate=[])};b.prototype.readGamepadState=function(){var a=this,d=document.hasFocus(),c=this.element.contains(document.activeElement),b="document"===this.input.gamepad.enabledFocusMode&&!d||"view"===this.input.gamepad.enabledFocusMode&&!c;this.forEachGamepad(function(d){var c=a.inputDevices[d.index];if(c){var g=a.latestUpdate[d.index],c=f.extractState(c),e=b||f.stateIdle(c);g&&(g.timestamp===d.timestamp||!g.active&&
e||f.stateEqual(g.state,c))||a.emitGamepadEvent(d,c,!e)}})};b.prototype.forEachGamepad=function(a){for(var d=window.navigator.getGamepads(),c=0;c<d.length;c++){var b=d[c];this.validate(b)&&a(b)}};b.prototype.emitGamepadEvent=function(a,d,c){var b=this.latestUpdate[a.index];if((b=b&&b.active)||c)this.latestUpdate[a.index]={timestamp:a.timestamp,state:d,active:c},this.callback&&this.callback({device:this.inputDevices[a.index],state:d,action:!b&&c?"start":b&&c?"update":"end"})};b.prototype.validate=
function(a){if(!a||!a.connected)return!1;for(var b=0;b<a.axes.length;b++)if(isNaN(a.axes[b]))return!1;return!0};return b}();e.GamepadSource=h});