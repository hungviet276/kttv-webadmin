// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/has","./FreeList","./Utils"],function(t,u,v,p,r){Object.defineProperty(u,"__esModule",{value:!0});var q=["FILL","LINE","MARKER","TEXT","LABEL"];t=function(){function d(a,b,n,c){this._strides=a;this._displayList=b;this._freeListsAndStorage={};this._dirtyMap=null;this._dirtyMap=n;for(var e in a){this._freeListsAndStorage[e]={vtxFreeList:c?new p.FreeList(c):null,idxFreeList:c?new p.FreeList(c):null,vertexBuffers:{},indexBuffer:c?new Uint32Array(c):null};
for(var f in a[e])this._freeListsAndStorage[e].vertexBuffers[f]={data:c?r.allocateTypedArrayBuffer(c,a[e][f]):null,stride:a[e][f]}}}d.fromTileData=function(a,b){for(var n=a.getStrides(),c={},e=0;e<n.length;e++)c[q[e]]=n[e];for(var n=[0,0,0,0,0],e=[0,0,0,0,0],f=0,g=a.tileDisplayData.displayObjects;f<g.length;f++)for(var k=0,l=g[f].displayRecords;k<l.length;k++){var h=l[k];n[h.geometryType]=Math.max(n[h.geometryType],h.vertexFrom+h.vertexCount);e[h.geometryType]=Math.max(e[h.geometryType],h.indexFrom+
h.indexCount)}b=new d(c,a.tileDisplayData.displayList,b,null);for(c=0;c<a.tileBufferData.geometries.length;++c){f=n[c];k=e[c];l=a.tileBufferData.geometries[c];g=b._storageFor(q[c]);h=a.tileBufferData.geometries[c].indexBuffer;g.indexBuffer=h;g.idxFreeList=new p.FreeList(h.length);g.idxFreeList.allocate(k);var k=void 0,m;for(m in l.vertexBuffer)l=a.tileBufferData.geometries[c].vertexBuffer[m],g.vertexBuffers[m].data=l.data,g.vertexBuffers[m].stride=l.stride,h=r.strideToPackingFactor(l.stride),l=l.data.length*
h/l.stride,k||(k=l);g.vtxFreeList=new p.FreeList(k);g.vtxFreeList.allocate(f)}return b};d.prototype.delete=function(a){var b=q[a.geometryType];this._freeVertices(b,a.vertexFrom,a.vertexCount);this._freeIndices(b,a.indexFrom,a.indexCount);this._displayList.removeFromList(a);a.vertexFrom=void 0;a.indexFrom=void 0};d.prototype.setMeshData=function(a,b,n,c,e){var f=q[a.geometryType];a.meshData=null;var g=void 0,k=void 0;void 0===a.vertexFrom?(k=b.vertexCount,g=this._allocateVertices(f,k)):b.vertexCount>
a.vertexCount?(this._freeVertices(f,a.vertexFrom,a.vertexCount),k=b.vertexCount,g=this._allocateVertices(f,k)):b.vertexCount===a.vertexCount?(g=a.vertexFrom,k=a.vertexCount):(this._freeVertices(f,a.vertexFrom+b.vertexCount,a.vertexCount-b.vertexCount),g=a.vertexFrom,k=b.vertexCount);var l=!0,h=void 0,m=void 0,d=void 0;void 0===a.indexFrom?(h=e,d=b.indexCount,m=this._allocateIndices(f,d)):b.indexCount>a.indexCount?(h=this._displayList.removeFromList(a),this._freeIndices(f,a.indexFrom,a.indexCount),
d=b.indexCount,m=this._allocateIndices(f,d)):b.indexCount===a.indexCount?(l=!1,m=a.indexFrom,d=a.indexCount):(h=this._displayList.removeFromList(a),this._freeIndices(f,a.indexFrom+b.indexCount,a.indexCount-b.indexCount),m=a.indexFrom,d=b.indexCount);if(-1!==g&&-1!==m){e=this._storageFor(f);r.copyMeshData(g,m,e.vertexBuffers,e.indexBuffer,b,n,c);a.vertexFrom=g;a.indexFrom=m;a.vertexCount=b.vertexCount;a.indexCount=b.indexCount;if(this._dirtyMap){this._dirtyMap.markDirtyIndices(a.geometryType,a.indexFrom,
a.indexCount);for(var p in n)this._dirtyMap.markDirtyVertices(a.geometryType,p,a.vertexFrom,a.vertexCount)}l&&this._displayList.addToList(a,h);return!0}-1!==g&&this._freeVertices(f,g,k);-1!==m&&this._freeIndices(f,m,d);a.setMeshDataFromBuffers(b,n,c);a.vertexFrom=void 0;a.vertexCount=0;a.indexFrom=void 0;a.indexCount=0;return!1};d.prototype.tryAddMeshData=function(a,b){var d=b.vertexBuffer;b=b.indexBuffer;var c=q[a.geometryType],e=this._allocateVertices(c,a.vertexCount);if(-1===e)return this._freeVertices(c,
e,a.vertexCount),!1;var f=this._allocateIndices(c,a.indexCount);if(-1===f)return this._freeVertices(c,e,a.vertexCount),this._freeIndices(c,f,a.indexCount),!1;c=this._storageFor(c);r.copyMeshData(e,f,c.vertexBuffers,c.indexBuffer,a,d,b);a.vertexFrom=e;a.indexFrom=f;if(this._dirtyMap){this._dirtyMap.markDirtyIndices(a.geometryType,a.indexFrom,a.indexCount);for(var g in d)this._dirtyMap.markDirtyVertices(a.geometryType,g,e,a.vertexCount)}this._displayList.addToList(a);return!0};d.prototype._allocateVertices=
function(a,b){a=this._storageFor(a);b=a.vtxFreeList.allocate(b);return-1===b||.5<a.vtxFreeList.fragmentation?-1:b};d.prototype._freeVertices=function(a,b,d){this._storageFor(a).vtxFreeList.free(b,d)};d.prototype._freeIndices=function(a,b,d){this._storageFor(a).idxFreeList.free(b,d)};d.prototype._allocateIndices=function(a,b){a=this._storageFor(a);b=a.idxFreeList.allocate(b);return-1===b||.5<a.idxFreeList.fragmentation?-1:b};d.prototype._storageFor=function(a){return this._freeListsAndStorage[a]};
d.prototype._stridesFor=function(a,b){return this._strides[a][b]};return d}();u.default=t});