// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","./geometryDataUtils","./Util"],function(f,e,k,d){Object.defineProperty(e,"__esModule",{value:!0});e.GeometryData=void 0;f=function(){function b(a,c,d){void 0===c&&(c=b.DefaultIndices);void 0===d&&(d="triangle");this.initialize(a,c,d)}Object.defineProperty(b.prototype,"id",{get:function(){return this._id},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"vertexAttributes",{get:function(){return this._vertexAttributes},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,
"indices",{get:function(){return this._indices},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"indexCount",{get:function(){var a=d.getFirstObjectValue(this._indices);return null==a?0:a.length},enumerable:!1,configurable:!0});Object.defineProperty(b.prototype,"primitiveType",{get:function(){return this._primitiveType},enumerable:!1,configurable:!0});b.prototype.getVertexAttr=function(){return this.vertexAttributes};b.prototype.initialize=function(a,c,e){void 0===c&&(c=b.DefaultIndices);
void 0===e&&(e="triangle");var g={},h;for(h in a){var f=a[h],l=f.size;g[h]={data:f.data,size:l,offsetIdx:0,strideIdx:l}}if(c===b.DefaultIndices){c=d.getFirstObjectValue(g);c=null==c?0:c.data.length/c.size;a=k.generateDefaultIndexArray(c);c={};for(var m in g)c[m]=a}this._id=k.getNewId();this._vertexAttributes=g;this._indices=c;this._primitiveType=e};b.prototype.toRenderData=function(){return{id:this._id.toString(),indices:this._indices,vertexAttr:this._vertexAttributes}};b.prototype.getIndices=function(a){return this._indices[a]};
b.prototype.getAttribute=function(a){return this._vertexAttributes[a]};b.prototype.estimateGpuMemoryUsage=function(){var a=0;this._indices[d.VertexAttrConstants.POSITION]&&(a+=12*this._indices[d.VertexAttrConstants.POSITION].length);this._indices[d.VertexAttrConstants.NORMAL]&&(a+=12*this._indices[d.VertexAttrConstants.NORMAL].length);this._indices[d.VertexAttrConstants.UV0]&&(a+=8*this._indices[d.VertexAttrConstants.UV0].length);this._indices[d.VertexAttrConstants.COLOR]&&(a+=4*this._indices[d.VertexAttrConstants.COLOR].length);
return a};b.DefaultIndices={};return b}();e.GeometryData=f});