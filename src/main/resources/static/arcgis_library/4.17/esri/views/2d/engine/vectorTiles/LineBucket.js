// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../../core/has ./BaseBucket ../webgl/TurboLine ../webgl/mesh/templates/util".split(" "),function(A,B,u,C,v,r,q){var t=1/3.8,w=function(b){return function(a){a.entry0=b._lineVertexBuffer.index;b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,b._ddValues);a.entry2=b._lineVertexBuffer.index;b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,b._ddValues);
a.exit0=b._lineVertexBuffer.index;b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,b._ddValues);a.exit2=b._lineVertexBuffer.index;b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,b._ddValues)}},x=function(b){return function(a){b._lineIndexBuffer.add(a.leftExit0,a.rightEntry0,a.leftExit2);b._lineIndexBuffer.add(a.rightEntry0,a.rightEntry2,a.leftExit2)}},y=function(b){return function(a){var f=
2===b._joinType?b._miterLimitCosine:b._roundLimitCosine,c=a.isCap&&0!==b._capType,d=!1;.97<a.cosine?(a.exit0=a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,b._ddValues),a.exit2=a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,b._ddValues)):a.cosine<1-.97?(a.entry0=b._lineVertexBuffer.index,
b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,b._ddValues),a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,b._ddValues),a.exit0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,b._ddValues),a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,b._ddValues)):a.canSplit?(r.splitVertex(),0<a.sign?(a.splitInner?(a.exit0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.leftInner.x,a.leftInner.y,0,-1,a.distance,b._ddValues),a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.rightInner.x,a.rightInner.y,0,-1,a.distance,b._ddValues)):(a.exit0=a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,b._ddValues)),a.cosine<f?(d=!a.isCap,a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,b._ddValues),a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,b._ddValues)):a.splitOuter?(d=d||a.gapOuter,a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,-a.leftOuter.x,-a.leftOuter.y,0,1,a.distance,b._ddValues),a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.rightOuter.x,-a.rightOuter.y,0,1,a.distance,b._ddValues)):(a.entry2=a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,b._ddValues))):(a.splitInner?(a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,-a.leftInner.x,-a.leftInner.y,0,1,a.distance,b._ddValues),a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.rightInner.x,-a.rightInner.y,0,1,a.distance,b._ddValues)):(a.exit2=a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,b._ddValues)),a.cosine<f?(d=!a.isCap,a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,b._ddValues),a.exit0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,b._ddValues)):a.splitOuter?(d=d||a.gapOuter,a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.leftOuter.x,a.leftOuter.y,0,-1,a.distance,b._ddValues),a.exit0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,
a.rightOuter.x,a.rightOuter.y,0,-1,a.distance,b._ddValues)):(a.exit0=a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,b._ddValues)))):0<a.sign?(a.exit0=a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,b._ddValues),a.cosine<f?(d=!a.isCap,a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,b._ddValues),a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,b._ddValues)):(a.entry2=a.exit2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,b._ddValues))):(a.exit2=a.entry2=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,
-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,b._ddValues),a.cosine<f?(d=!a.isCap,a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,b._ddValues),a.exit0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,b._ddValues)):(a.exit0=a.entry0=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,
a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,b._ddValues)));a.canSplit&&(a.splitInner||a.splitOuter)||d||c?(f=a.entry1=a.exit1=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,0,0,0,0,a.distance,b._ddValues)):f=a.entry1=a.exit1=null;if(d&&1!==b._joinType)b._lineIndexBuffer.add(f,0<a.sign?a.exit2:a.entry0,0<a.sign?a.entry2:a.exit0);else if(c&&1===b._capType||d&&1===b._joinType){var e=d=c=void 0,p=void 0,h=void 0,l=void 0;if(a.isCap){var k=Math.PI,
h=Math.ceil(k/.8),l=k/h;a.isFirstVertex?(c=a.prevNormal.x,d=a.prevNormal.y,e=a.entry0,p=a.entry2):a.isLastVertex&&(c=-a.nextNormal.x,d=-a.nextNormal.y,e=a.exit2,p=a.exit0)}else k=2*Math.acos(a.cosine),h=Math.ceil(k/.8),l=k/h,c=0<a.sign?-a.prevNormal.x:a.nextNormal.x,d=0<a.sign?-a.prevNormal.y:a.nextNormal.y,e=0<a.sign?a.entry2:a.exit0,p=0<a.sign?a.exit2:a.entry0;for(var k=Math.cos(l),l=Math.sin(l),n=l*c+k*d,c=k*c-l*d,d=n,g=void 0,n=void 0,m=0;m<h;++m){g=n;if(m<h-1)if(a.isCap){var q=a.isFirstVertex?
-1:1,n=b._lineVertexBuffer.index;b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,c,d,q,0,a.distance,b._ddValues)}else n=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,c,d,0,a.sign,a.distance,b._ddValues);b._lineIndexBuffer.add(0===m?e:g,f,m===h-1?p:n);g=l*c+k*d;c=k*c-l*d;d=g}}else c&&2===b._capType&&(c=a.isFirstVertex?1:-1,e=d=void 0,b._hasPattern?(d=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x-
c*a.inbound.x,a.prevNormal.y-c*a.inbound.y,-c,-1,a.distance,b._ddValues),e=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x-c*a.inbound.x,-a.prevNormal.y-c*a.inbound.y,-c,1,a.distance,b._ddValues)):(d=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x-c*a.inbound.x,a.prevNormal.y-c*a.inbound.y,0,-1,a.distance,b._ddValues),e=b._lineVertexBuffer.index,b._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,
-a.prevNormal.x-c*a.inbound.x,-a.prevNormal.y-c*a.inbound.y,0,1,a.distance,b._ddValues)),0<c?(b._lineIndexBuffer.add(f,a.entry2,e),b._lineIndexBuffer.add(f,e,d),b._lineIndexBuffer.add(f,d,a.entry0)):(b._lineIndexBuffer.add(f,e,a.exit2),b._lineIndexBuffer.add(f,d,e),b._lineIndexBuffer.add(f,a.exit0,d)))}},z=function(b){return function(a){b._lineIndexBuffer.add(a.leftExit0,a.rightEntry0,null!=a.leftExit1?a.leftExit1:a.leftExit2);b._lineIndexBuffer.add(a.rightEntry0,null!=a.rightEntry1?a.rightEntry1:
a.rightEntry2,null!=a.leftExit1?a.leftExit1:a.leftExit2);null!=a.leftExit1&&null!=a.rightEntry1?(b._lineIndexBuffer.add(a.leftExit1,a.rightEntry1,a.leftExit2),b._lineIndexBuffer.add(a.rightEntry1,a.rightEntry2,a.leftExit2)):null!=a.leftExit1?b._lineIndexBuffer.add(a.leftExit1,a.rightEntry2,a.leftExit2):null!=a.rightEntry1&&b._lineIndexBuffer.add(a.rightEntry1,a.rightEntry2,a.leftExit2)}};return function(b){function a(a,c,d,e){c=b.call(this,a,c)||this;c.type=2;c._tessellationOptions={};c.tessellationProperties=
{_lineVertexBuffer:null,_lineIndexBuffer:null,_hasPattern:null,_ddValues:null,_capType:null,_joinType:null,_miterLimitCosine:null,_roundLimitCosine:null};if(a.hasDataDrivenLine!==d.isDataDriven())throw Error("incompatible line buffer");c.tessellationProperties._lineVertexBuffer=d;c.tessellationProperties._lineIndexBuffer=e;c.tessellationProperties._hasPattern=a.getPaintValue("line-pattern",c.zoom)||0<a.getPaintValue("line-dasharray",c.zoom).length;c._isThinLine=a.isThinLine;c._tessellationCallbacks=
c._isThinLine?{vertex:w(c.tessellationProperties),bridge:x(c.tessellationProperties)}:{vertex:y(c.tessellationProperties),bridge:z(c.tessellationProperties)};return c}u.__extends(a,b);Object.defineProperty(a.prototype,"lineIndexStart",{get:function(){return this._lineIndexStart},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"lineIndexCount",{get:function(){return this._lineIndexCount},enumerable:!1,configurable:!0});a.prototype.processFeatures=function(a){this._lineIndexStart=
3*this.tessellationProperties._lineIndexBuffer.index;this._lineIndexCount=0;var b=this.layer,d=this.zoom,f=b.hasDataDrivenLine;a&&a.setExtent(this.layerExtent);for(var p=[1,1,1,1],h=1,l=1,k=0,n=this._features;k<n.length;k++){var g=n[k];!this.tessellationProperties._hasPattern&&b.hasDataDrivenColor&&(p=b.getPaintValue("line-color",d,g));b.hasDataDrivenOpacity&&(h=b.getPaintValue("line-opacity",d,g));b.hasDataDrivenWidth&&(l=b.getPaintValue("line-width",d,g));var m=void 0;if(f&&(m={color:p,opacity:h,
size:Math.max(Math.min(l,256),0)},0>=m.size||0>=m.opacity||0>=m.color[3]))continue;this.tessellationProperties._capType=b.getLayoutValue("line-cap",d,g);this.tessellationProperties._joinType=b.getLayoutValue("line-join",d,g);this.tessellationProperties._miterLimitCosine=q.getLimitCosine(b.getLayoutValue("line-miter-limit",d,g));this.tessellationProperties._roundLimitCosine=q.getLimitCosine(b.getLayoutValue("line-round-limit",d,g));g=g.getGeometry(a);this._processFeature(g,m)}r.cleanup()};a.prototype.serialize=
function(){var a;a=7+this.layerIndices.length;a+=this.tessellationProperties._lineVertexBuffer.array.length;a+=this.tessellationProperties._lineIndexBuffer.array.length;var b=0;a=new Uint32Array(a);var d=new Int32Array(a.buffer);a[b++]=this.type;a[b++]=this.layerIndices.length;for(var e=0;e<this.layerIndices.length;e++)a[b++]=this.layerIndices[e];a[b++]=this._lineIndexStart;a[b++]=this._lineIndexCount;a[b++]=this.tessellationProperties._lineVertexBuffer.isDataDriven()?1:0;a[b++]=this.tessellationProperties._lineVertexBuffer.array.length;
for(e=0;e<this.tessellationProperties._lineVertexBuffer.array.length;e++)d[b++]=this.tessellationProperties._lineVertexBuffer.array[e];a[b++]=this.tessellationProperties._lineIndexBuffer.array.length;for(d=0;d<this.tessellationProperties._lineIndexBuffer.array.length;d++)a[b++]=this.tessellationProperties._lineIndexBuffer.array[d];return a.buffer};a.prototype._processFeature=function(a,b){if(a)for(var d=a.length,c=0;c<d;c++)this._processGeometry(a[c],b)};a.prototype._processGeometry=function(a,b){if(!(2>
a.length)){for(var d=a[0],c=1,f,h;c<a.length;)f=a[c].x-d.x,h=a[c].y-d.y,1E-6>f*f+h*h?a.splice(c,1):(d=a[c],++c);2>a.length||(d=3*this.tessellationProperties._lineIndexBuffer.index,this._tessellationOptions.trackDistance=this.tessellationProperties._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=t,this._tessellationOptions.enableOuterBisectorSplit=
this.tessellationProperties._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=t,this._tessellationOptions.enableInnerBisectorSplit=this.tessellationProperties._hasPattern,this.tessellationProperties._ddValues=b,r.tessellate(a,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*this.tessellationProperties._lineIndexBuffer.index-d)}};return a}(v)});