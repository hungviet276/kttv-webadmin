// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","./reservedWordsGLSL3","./lib/glsl-tokenizer/string"],function(y,p,v,w){function x(b){return b.map(function(b){return"eof"!==b.type?b.data:""}).join("")}function q(b,c,d,a){a=a||d;for(var f=0;f<b.length;f++){var e=b[f];if("ident"===e.type&&e.data===d)return a in c?c[a]++:c[a]=0,q(b,c,a+"_"+c[a],a)}return d}function u(b,c,d){void 0===d&&(d="afterVersion");var a={data:"\n",type:"whitespace"},f=function(a){return a<b.length?/[^\r\n]$/.test(b[a].data):!1},e=function(a){for(var b=
-1,c=0,f=-1,e=0;e<a.length;e++){var h=a[e];"preprocessor"===h.type&&(h.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++c:h.data.match(/\#endif\s*.*/)&&--c);("afterVersion"===d||"afterPrecision"===d)&&"preprocessor"===h.type&&/^#version/.test(h.data)&&(f=Math.max(f,e));if("afterPrecision"===d&&"keyword"===h.type&&"precision"===h.data){a:{for(h=e;h<a.length;h++){var g=a[h];if("operator"===g.type&&";"===g.data)break a}h=null}if(null===h)throw Error("precision statement not followed by any semicolons!");f=Math.max(f,
h)}b<f&&0===c&&(b=e)}return b+1}(b);f(e-1)&&b.splice(e++,0,a);for(var l=0;l<c.length;l++){var m=c[l];b.splice(e++,0,m)}f(e-1)&&f(e)&&b.splice(e,0,a)}Object.defineProperty(p,"__esModule",{value:!0});p.transpileShader=void 0;var t=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];p.transpileShader=function(b,c){b=w(b);var d;a:{d="100";var a="300 es";void 0===d&&(d="100");void 0===a&&(a="300 es");for(var f=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/,
e=0;e<b.length;e++){var l=b[e];if("preprocessor"===l.type){var m=f.exec(l.data);if(m){f=m[1].replace(/\s\s+/g," ");if(f===a){d=f;break a}if(f===d){l.data="#version "+a;break a}throw Error("unknown glsl version: "+f);}}}b.splice(0,0,{type:"preprocessor",data:"#version "+a},{type:"whitespace",data:"\n"});d=null}if("300 es"===d)throw Error("shader is already glsl 300 es");f=l=null;e={};m={};for(d=0;d<b.length;++d)switch(a=b[d],a.type){case "keyword":"vertex"===c&&"attribute"===a.data?a.data="in":"varying"===
a.data&&(a.data="vertex"===c?"out":"in");break;case "builtin":/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(a.data.trim())&&(a.data=a.data.replace(/(2D|Cube|EXT)/g,""));if("fragment"===c&&"gl_FragColor"===a.data){if(!l){var l=q(b,e,"fragColor"),g=void 0;void 0===g&&(g="lowp");u(b,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:g},{type:"whitespace",data:" "},{type:"keyword",data:"vec4"},{type:"whitespace",data:" "},{type:"ident",data:l},{type:"operator",data:";"}],
"afterPrecision")}a.data=l}if("fragment"===c&&"gl_FragData"===a.data){for(var g=b,k=void 0,n=void 0,p=-1,r=d+1;r<g.length;r++){var h=g[r];if("operator"===h.type&&("["===h.data&&(k=r),"]"===h.data)){n=r;break}"integer"===h.type&&(p=parseInt(h.data,10))}k&&n&&g.splice(k,n-k+1);g=p;k=q(b,e,"fragData");n="mediump";void 0===n&&(n="lowp");u(b,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"\x3d"},{type:"whitespace",
data:" "},{type:"integer",data:g.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:"vec4"},{type:"whitespace",data:" "},{type:"ident",data:k},{type:"operator",data:";"}],"afterPrecision");a.data=k}else"fragment"===c&&"gl_FragDepthEXT"===a.data&&(f||(f=q(b,e,"gl_FragDepth")),a.data=f);break;case "ident":if(0<=v.indexOf(a.data)){if(g="vertex"===c)a:{for(g=
d-1;0<=g;g--)if(k=b[g],"whitespace"!==k.type&&"block-comment"!==k.type)if("keyword"===k.type){if("attribute"===k.data||"in"===k.data){g=!0;break a}}else break;g=!1}if(g)throw Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");a.data in m||(m[a.data]=q(b,e,a.data));a.data=m[a.data]}}for(d=b.length-1;0<=d;--d)a=b[d],"preprocessor"===a.type&&((c=a.data.match(/\#extension\s+(.*)\:/))&&c[1]&&0<=t.indexOf(c[1].trim())&&(c=b[d+1],b.splice(d,c&&"whitespace"===c.type?2:
1)),(c=a.data.match(/\#ifdef\s+(.*)/))&&c[1]&&0<=t.indexOf(c[1].trim())&&(a.data="#if 1"),(c=a.data.match(/\#ifndef\s+(.*)/))&&c[1]&&0<=t.indexOf(c[1].trim())&&(a.data="#if 0"));return x(b)}});