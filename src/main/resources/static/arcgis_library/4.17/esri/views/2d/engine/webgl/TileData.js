// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports ./MemoryRequirements ./TileBufferData ./TileDisplayData ./Utils ./Utils ./WGLDisplayRecord ./mesh/MeshData ./mesh/VertexBuffer ./util/Writer".split(" "),function(D,A,E,y,B,z,C,F,G,H,I){Object.defineProperty(A,"__esModule",{value:!0});A.TileData=void 0;var t=new E.default,p=new E.default;D=function(){function n(){this.tileBufferData=this.tileDisplayData=null}n.prototype.reshuffle=function(){t.reset();for(var b=B.groupRecordsByGeometryType(this.tileDisplayData.displayObjects),
c=0;c<b.length;c++)for(var e=b[c],h=0,d=e;h<d.length;h++){var a=d[h];a&&t.needMore(a.geometryType,a.meshData?a.meshData.vertexCount:a.vertexCount,a.meshData?a.meshData.indexData.length:a.indexCount)}h=b.length;c=new y;for(d=0;d<h;++d){c.geometries[d].indexBuffer=new Uint32Array(Math.round(1.5*t.indicesFor(d)));var a=[],g;for(g in this.tileBufferData.geometries[d].vertexBuffer)a.push(this.tileBufferData.geometries[d].vertexBuffer[g].stride);var a=n._computeVertexAlignment(a),e=Math.round(1.5*t.verticesFor(d)),
a=n._align(e,a),k;for(k in this.tileBufferData.geometries[d].vertexBuffer)e=this.tileBufferData.geometries[d].vertexBuffer[k].stride,c.geometries[d].vertexBuffer[k]={stride:e,data:C.allocateTypedArrayBuffer(a,e)}}p.reset();this.tileDisplayData.displayList.clear();for(d=0;d<h;++d){e=b[d];g=0;for(k=e;g<k.length;g++){a=k[g];if(a.meshData)a.writeMeshDataToBuffers(p.verticesFor(d),c.geometries[d].vertexBuffer,p.indicesFor(d),c.geometries[d].indexBuffer),a.meshData=null;else{var f=this.tileBufferData.geometries[d].vertexBuffer,
m=this.tileBufferData.geometries[d].indexBuffer,r=c.geometries[d].vertexBuffer,l=c.geometries[d].indexBuffer,q=p.verticesFor(d),u=p.indicesFor(d);z.copyMeshData(q,u,r,l,a,f,m);a.vertexFrom=q;a.indexFrom=u}p.needMore(d,a.vertexCount,a.indexCount)}this.tileDisplayData.displayList.unified||this.tileDisplayData.displayList.addToList(e)}if(this.tileDisplayData.displayList.unified)for(b=0,h=this.tileDisplayData.displayObjects;b<h.length;b++)this.tileDisplayData.displayList.addToList(h[b].displayRecords);
this.tileBufferData=c};n.prototype.reshuffleV2=function(b,c,e){var h=b.addOrUpdate.tileDisplayData.displayObjects,d=this.tileDisplayData.displayObjects;t.reset();for(var a=0;a<d.length;a++)for(var g=d[a],k=0;k<g.displayRecords.length;k++){var f=g.displayRecords[k];t.needMore(f.geometryType,f.vertexCount,f.indexCount)}for(a=c;a<h.length;a++)for(var g=h[a],m=a===c?e:0,k=m;k<g.displayRecords.length;k++)f=g.displayRecords[k],t.needMore(f.geometryType,f.vertexCount,f.indexCount);for(var r=new y,a=0;5>
a;a++){r.geometries[a].indexBuffer=new Uint32Array(Math.round(1.5*t.indicesFor(a)));var g=[],m=this.tileBufferData.geometries[a].vertexBuffer,l;for(l in m)g.push(m[l].stride);var g=n._computeVertexAlignment(g),k=Math.round(1.5*t.verticesFor(a)),g=n._align(k,g),q;for(q in m)k=m[q].stride,f=C.allocateTypedArrayBuffer(g,k),r.geometries[a].vertexBuffer[q]={stride:k,data:f}}p.reset();this.tileDisplayData.displayList.clear();for(a=0;a<d.length;a++)for(g=d[a],k=0;k<g.displayRecords.length;k++){f=g.displayRecords[k];
l=f.geometryType;m=this.tileBufferData.geometries[l].vertexBuffer;q=this.tileBufferData.geometries[l].indexBuffer;var u=r.geometries[l].vertexBuffer,x=r.geometries[l].indexBuffer,v=p.verticesFor(l),w=p.indicesFor(l);z.copyMeshData(v,w,u,x,f,m,q);f.vertexFrom=v;f.indexFrom=w;p.needMore(l,f.vertexCount,f.indexCount);this.tileDisplayData.displayList.addToList(f)}if(0!==e)for(g=h[c],k=0;k<e;k++)f=g.displayRecords[k],l=f.geometryType,m=this.tileBufferData.geometries[l].vertexBuffer,q=this.tileBufferData.geometries[l].indexBuffer,
u=r.geometries[l].vertexBuffer,x=r.geometries[l].indexBuffer,v=p.verticesFor(l),w=p.indicesFor(l),z.copyMeshData(v,w,u,x,f,m,q),f.vertexFrom=v,f.indexFrom=w,p.needMore(l,f.vertexCount,f.indexCount),this.tileDisplayData.displayList.addToList(f);for(a=c;a<h.length;a++){g=h[a];for(k=m=a===c?e:0;k<g.displayRecords.length;k++)f=g.displayRecords[k],l=f.geometryType,d=b.addOrUpdate.tileBufferData.geometries[l],m=d.vertexBuffer,q=d.indexBuffer,u=r.geometries[l].vertexBuffer,x=r.geometries[l].indexBuffer,
v=p.verticesFor(l),w=p.indicesFor(l),z.copyMeshData(v,w,u,x,f,m,q),f.vertexFrom=v,f.indexFrom=w,p.needMore(l,f.vertexCount,f.indexCount),this.tileDisplayData.displayList.addToList(f);this.tileDisplayData.hasRegistry&&this.tileDisplayData.displayObjectRegistry.set(g.id,g);this.tileDisplayData.displayObjects.push(g)}this.tileBufferData=r};n.prototype.getStrides=function(){for(var b=[],c=0;c<this.tileBufferData.geometries.length;++c){var e=this.tileBufferData.geometries[c];b[c]={};for(var h in e.vertexBuffer)b[c][h]=
e.vertexBuffer[h].stride}return b};n.prototype.clone=function(){var b=new n;b.tileBufferData=this.tileBufferData.clone();b.tileDisplayData=this.tileDisplayData.clone();return b};n.prototype._guessSize=function(){for(var b=this.tileDisplayData.displayObjects,c=Math.min(b.length,4),e=0,h=0;h<c;h++)e=Math.max(e,b[h].displayRecords.length);return 2*(12*b.length+b.length*e*40)};n.prototype.serialize=function(){var b=this.tileBufferData.serialize(),c=this.tileBufferData.getBuffers(),e=this.tileDisplayData.serialize(new I.default(Int32Array,
this._guessSize())).buffer();c.push(e);return{result:{displayData:e,bufferData:b},transferList:c}};n.decode=function(b){var c=G.MeshData.deserializeDisplayObjects(b),e={},h;for(h in b.vertexBuffersMap)e[h]=H.VertexBuffers.decode(b.vertexBuffersMap[h]);return n.fromMeshData({displayObjects:c,vertexBuffersMap:e})};n.fromMeshData=function(b){var c=new n,e=new B.default,h=new y;e.displayObjects=b.displayObjects;for(var d in b.vertexBuffersMap){var a=b.vertexBuffersMap[d];h.geometries[d].indexBuffer=a.indexBuffer;
h.geometries[d].vertexBuffer=a.namedBuffers}c.tileDisplayData=e;c.tileBufferData=h;return c};n.bind=function(b,c){var e=new n;e.tileDisplayData=b;e.tileBufferData=c;return e};n.create=function(b,c){var e=new n;e.tileDisplayData=new B.default;e.tileDisplayData.displayObjects=b;for(var h=[0,0,0,0,0],d=[0,0,0,0,0],a=[[],[],[],[],[]],g=0;g<b.length;g++)for(var k=0,f=b[g].displayRecords;k<f.length;k++){var m=f[k];a[m.geometryType].push(m);h[m.geometryType]+=m.meshData.vertexCount;d[m.geometryType]+=m.meshData.indexData.length}b=
new y;c=[c.fill||{},c.line||{},c.icon||{},c.text||{},c.label||{}];for(g=0;5>g;g++){var k=new Uint32Array(d[g]),f=c[g],m=h[g],p={},l=void 0;for(l in f){var q={data:C.allocateTypedArrayBuffer(m,f[l]),stride:f[l]};p[l]=q}f=p;F.writeAllMeshDataToBuffers(a[g],f,k);b.geometries[g]={indexBuffer:k,vertexBuffer:f}}e.tileBufferData=b;return e};n._align=function(b,c){var e=b%c;return 0===e?b:b+(c-e)};n._computeVertexAlignment=function(b){for(var c=!1,e=!1,h=0;h<b.length;h++){var d=b[h];2===d%4?c=!0:0!==d%4&&
(e=!0)}return e?4:c?2:1};return n}();A.TileData=D});