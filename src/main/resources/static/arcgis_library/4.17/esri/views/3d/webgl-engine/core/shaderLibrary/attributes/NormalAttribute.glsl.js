// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","tslib","../util/DecodeNormal.glsl","../../shaderModules/interfaces"],function(k,a,c,h,d){Object.defineProperty(a,"__esModule",{value:!0});a.NormalAttribute=void 0;a.NormalAttribute=function(b,a){0===a.normalType&&(b.attributes.add("normal","vec3"),b.vertex.code.add(d.glsl(e||(e=c.__makeTemplateObject(["\n      vec3 normalModel() {\n        return normal;\n      }\n    "],["\n      vec3 normalModel() {\n        return normal;\n      }\n    "])))));1===a.normalType&&(b.include(h.DecodeNormal),
b.attributes.add("normalCompressed","vec2"),b.vertex.code.add(d.glsl(f||(f=c.__makeTemplateObject(["\n      vec3 normalModel() {\n        return decodeNormal(normalCompressed);\n      }\n    "],["\n      vec3 normalModel() {\n        return decodeNormal(normalCompressed);\n      }\n    "])))));3===a.normalType&&(b.extensions.add("GL_OES_standard_derivatives"),b.fragment.code.add(d.glsl(g||(g=c.__makeTemplateObject(["\n      vec3 screenDerivativeNormal(vec3 positionView) {\n        return normalize(cross(dFdx(positionView), dFdy(positionView)));\n      }\n    "],
["\n      vec3 screenDerivativeNormal(vec3 positionView) {\n        return normalize(cross(dFdx(positionView), dFdy(positionView)));\n      }\n    "])))))};var e,f,g});