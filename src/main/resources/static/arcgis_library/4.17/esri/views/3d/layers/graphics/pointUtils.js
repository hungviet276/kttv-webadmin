// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/maybe ../../../../core/libs/gl-matrix-2/mat4f64 ../../../../core/libs/gl-matrix-2/vec3f64 ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/coordsUtils ../../../../layers/graphics/dehydratedFeatures ./elevationAlignmentUtils ./elevationAlignmentUtils ./graphicUtils ../../support/pointUtils ../../webgl-engine/lib/Object3D".split(" "),function(A,c,r,t,m,u,h,f,v,w,x,n,y){Object.defineProperty(c,"__esModule",{value:!0});c.geometryToRenderInfo=
c.placePointOnGeometry=c.extendPointGraphicElevationContext=c.createStageObjectForHUD=void 0;var d=m.vec3f64.create();c.createStageObjectForHUD=function(a,b,p,c,q,e,z,k,g,h,f){var m=p?p.length:0,l=a.clippingExtent;n.pointToVector(b,d,a.elevationProvider.spatialReference);if(r.isSome(l)&&!u.containsPoint(l,d))return null;n.pointToVector(b,d,a.renderCoordsHelper.spatialReference);l=a.localOriginFactory.getOrigin(d);k=new y({castShadow:!1,metadata:{layerUid:g,graphicUid:h,usesVerticalDistanceToGround:!0},
idHint:k});for(g=0;g<m;g++)k.addGeometry(p[g],c[g],q?q[g]:t.mat4f64.IDENTITY,e,l,f);a=w.applyElevationAlignmentForHUD(k,b,a.elevationProvider,a.renderCoordsHelper,z);return{object:k,sampledElevation:a}};c.extendPointGraphicElevationContext=function(a,b,c){a=a.elevationContext;c=c.spatialReference;n.pointToVector(b,d,c);a.centerPointInElevationSR=f.makeDehydratedPoint(d[0],d[1],b.hasZ?d[2]:0,c)};c.placePointOnGeometry=function(a){switch(a.type){case "point":return a;case "polygon":case "extent":return x.computeCentroid(a);
case "polyline":var b=a.paths[0];if(!b||0===b.length)break;b=h.getPointOnPath(b,h.getPathLength(b)/2);return f.makeDehydratedPoint(b[0],b[1],b[2],a.spatialReference);case "mesh":return a.extent.center}return null};c.geometryToRenderInfo=function(a,b,c,d,h){var e=new Float64Array(3*a.length),f=new Float64Array(e.length);a.forEach(function(a,b){e[3*b+0]=a[0];e[3*b+1]=a[1];e[3*b+2]=2<a.length?a[2]:0});b=v.applyPerVertexElevationAlignment(e,b,0,f,0,e,0,e.length/3,c,d,h);return{numVertices:a.length,position:e,
mapPosition:f,projectionSuccess:null!=b,sampledElevation:b}}});