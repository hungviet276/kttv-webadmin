// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../../../intl ../../../../../core/Accessor ../../../../../core/compilerUtils ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/Quantity ../../../../../core/quantityFormatUtils ../../../../../core/unitUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators ./MeasurementData ./PathChanges ../support/measurementUtils ../support/Path ../support/setUtils ../support/UnitNormalizer ../../../support/projectionUtils".split(" "),
function(z,A,b,g,q,r,t,u,l,m,f,v,c,w,n,e,x,p,y,h){return function(k){function a(){var d=null!==k&&k.apply(this,arguments)||this;d._unitNormalizer=new y;d._measurementData=new w;d._measurementDataChanges=new n;d._viewDataChanges=new n;d._handles=new t;d.path=new x;d.pathVersion=0;d.cursorPoint=null;d.state="initial";d.lastDraggedVertex=null;d.mode="auto";d.unit="metric";d.active=!1;d.maxRelativeErrorCoplanar=.005;d.maxRelativeErrorAlmostCoplanar=.01;d.verticalAngleThreshold=80;d.geodesicMeasurementDistanceThreshold=
1E5;return d}b.__extends(a,k);a.prototype.initialize=function(){var d=this;g.loadMessageBundle("esri/core/t9n/Units").then(function(a){d.messages=a});this._handles.add(g.onLocaleChange(function(){return b.__awaiter(d,void 0,void 0,function(){var d;return b.__generator(this,function(a){switch(a.label){case 0:return d=this,[4,g.loadMessageBundle("esri/core/t9n/Units")];case 1:return d.messages=a.sent(),[2]}})})}));this._handles.add(v.whenTrue(this.sceneView,"ready",function(){var a=d.sceneView.spatialReference;
d._worldSpatialReference=!a||h.canProject(a,h.WGS84ECEFSpatialReference)?h.WGS84ECEFSpatialReference:a;d._unitNormalizer.spatialReference=a}),"scene-view");this.reset();var a=function(){d._set("pathVersion",d.pathVersion+1)};this._handles.add(this.path.on("cleared",function(){d._measurementDataChanges.fullChange();d._set("pathVersion",0)}));this._handles.add(this.path.on("vertex-added",function(){d._measurementDataChanges.fullChange();a()}));this._handles.add(this.path.on("vertex-inserted",function(){d._measurementDataChanges.fullChange();
a()}));this._handles.add(this.path.on("vertex-removed",function(){d._measurementDataChanges.fullChange();a()}));this._handles.add(this.path.on("vertex-updated",function(b){d._measurementDataChanges.incrementalChange(b.index);a()}))};a.prototype.destroy=function(){this._handles.destroy();this._handles=null};Object.defineProperty(a.prototype,"validMeasurement",{get:function(){return 3<=this.path.length&&"measured"===this.state||"editing"===this.state},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,
"isMeasuring",{get:function(){return 1<=this.path.length},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"measurementData",{get:function(){this._viewDataChanges.merge(this._measurementDataChanges);var d=p.clone(this._measurementData.intersectingSegments),a=p.clone(this._measurementData.geodesicIntersectingSegments);this._measurementData.update(this.path,this._measurementDataChanges,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,
{maxRelativeErrorCoplanar:this.maxRelativeErrorCoplanar,maxRelativeErrorAlmostCoplanar:this.maxRelativeErrorAlmostCoplanar,verticalAngleThreshold:this.verticalAngleThreshold});e.compareSets(this._measurementData.intersectingSegments,d)||this._viewDataChanges.fullChange();e.compareSets(this._measurementData.geodesicIntersectingSegments,a)||this._viewDataChanges.fullChange();return this._measurementData},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"area",{get:function(){return this.measurementData.area},
enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"geodesicArea",{get:function(){return this.measurementData.geodesicArea},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"areaLabel",{get:function(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"pathLength",{get:function(){return this.measurementData.pathLength},
enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"geodesicPathLength",{get:function(){return this.measurementData.geodesicPathLength},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"pathLengthLabel",{get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"perimeterLength",{get:function(){return this.measurementData.perimeterLength},
enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"geodesicPerimeterLength",{get:function(){return this.measurementData.geodesicPathLength},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"perimeterLengthLabel",{get:function(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,
"cursorSegmentLength",{get:function(){return this.path.back&&this.cursorPoint&&new l(this._unitNormalizer.normalizeDistance(e.segmentLengthEuclidean(this.path.back,this.cursorPoint,this._worldSpatialReference)),"meters")},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"geodesicCursorSegmentLength",{get:function(){return this.path.back&&this.cursorPoint&&new l(e.segmentLengthGeodesic(this.path.back,this.cursorPoint),"meters")},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,
"cursorSegmentLengthLabel",{get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"viewData",{get:function(){var a=this.measurementData,b="geodesic"===this.measurementMode,c=b?this.geodesicArea:this.area,e=1;c&&(c=this._toPreferredAreaUnit(c,this.unit),e=u.nextHighestPowerOfTen(Math.sqrt(c.value)/Math.sqrt(300)),e*=Math.sqrt(f.convertUnit(1,
c.unit,"square-meters")),e/=this._unitNormalizer.normalizeDistance(1));return{validMeasurement:this.validMeasurement,path:this.path,pathChanges:this._viewDataChanges,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:b?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:b?a.geodesicTriangleIndices:a.triangleIndices,
fittingMode:a.fittingMode,areaCentroid:b?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.length-2,perimeterLengthLabelSegmentIndex:0,checkerSize:e}},enumerable:!1,configurable:!0});Object.defineProperty(a.prototype,"measurementMode",{get:function(){var a=this.mode;"auto"===a&&(a="euclidean",(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:
0)>this.geodesicMeasurementDistanceThreshold&&(a="geodesic"));null==this.geodesicPathLength&&(a="euclidean");return a},enumerable:!1,configurable:!0});a.prototype.reset=function(){this.clearMeasurement()};a.prototype.clearMeasurement=function(){this.path.clear();this.state="initial";this.cursorPoint=null};a.prototype.finishMeasurement=function(){3>this.path.length?this.clearMeasurement():(this._measurementDataChanges.fullChange(),this.state="measured")};a.prototype._preferredAreaUnit=function(a,b){switch(b){case "metric":return f.preferredMetricAreaUnit(a.value,
a.unit);case "imperial":return f.preferredImperialAreaUnit(a.value,a.unit);default:return b}};a.prototype._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return f.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return f.preferredImperialLengthUnit(a.value,a.unit);default:return b}};a.prototype._toPreferredAreaUnit=function(a,b){return a.toUnit(this._preferredAreaUnit(a,b))};a.prototype._toPreferredLengthUnit=function(a,b){return a.toUnit(this._preferredLengthUnit(a,
b))};a.prototype._formatAreaLabel=function(a,b,c){return a&&b&&m.formatDecimal(a,b,this._preferredAreaUnit(b,c))};a.prototype._formatLengthLabel=function(a,b,c){return a&&b&&m.formatDecimal(a,b,this._preferredLengthUnit(b,c))};a.prototype._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";
case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric";default:r.neverReached(a)}throw Error("unhandled area unit");};b.__decorate([c.property()],a.prototype,"messages",void 0);b.__decorate([c.property({constructOnly:!0})],a.prototype,"sceneView",void 0);b.__decorate([c.property({readOnly:!0})],
a.prototype,"path",void 0);b.__decorate([c.property({readOnly:!0})],a.prototype,"pathVersion",void 0);b.__decorate([c.property()],a.prototype,"cursorPoint",void 0);b.__decorate([c.property()],a.prototype,"state",void 0);b.__decorate([c.property()],a.prototype,"lastDraggedVertex",void 0);b.__decorate([c.property()],a.prototype,"mode",void 0);b.__decorate([c.property()],a.prototype,"unit",void 0);b.__decorate([c.property()],a.prototype,"active",void 0);b.__decorate([c.property({readOnly:!0,dependsOn:["path.length",
"state"]})],a.prototype,"validMeasurement",null);b.__decorate([c.property({readOnly:!0,dependsOn:["path.length"]})],a.prototype,"isMeasuring",null);b.__decorate([c.property({readOnly:!0,dependsOn:["pathVersion","validMeasurement","maxRelativeErrorCoplanar","maxRelativeErrorAlmostCoplanar","verticalAngleThreshold"]})],a.prototype,"measurementData",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],a.prototype,"area",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],
a.prototype,"geodesicArea",null);b.__decorate([c.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],a.prototype,"areaLabel",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],a.prototype,"pathLength",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],a.prototype,"geodesicPathLength",null);b.__decorate([c.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],a.prototype,
"pathLengthLabel",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],a.prototype,"perimeterLength",null);b.__decorate([c.property({readOnly:!0,dependsOn:["measurementData"]})],a.prototype,"geodesicPerimeterLength",null);b.__decorate([c.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],a.prototype,"perimeterLengthLabel",null);b.__decorate([c.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],a.prototype,"cursorSegmentLength",
null);b.__decorate([c.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],a.prototype,"geodesicCursorSegmentLength",null);b.__decorate([c.property({readOnly:!0,dependsOn:["messages","unit","measurementMode","cursorSegmentLength","geodesicCursorSegmentLength"]})],a.prototype,"cursorSegmentLengthLabel",null);b.__decorate([c.property({readOnly:!0,dependsOn:["unit","measurementMode","measurementData"]})],a.prototype,"viewData",null);b.__decorate([c.property()],a.prototype,"maxRelativeErrorCoplanar",
void 0);b.__decorate([c.property()],a.prototype,"maxRelativeErrorAlmostCoplanar",void 0);b.__decorate([c.property()],a.prototype,"verticalAngleThreshold",void 0);b.__decorate([c.property()],a.prototype,"geodesicMeasurementDistanceThreshold",void 0);b.__decorate([c.property({readOnly:!0,dependsOn:["mode","validMeasurement","geodesicPathLength","geodesicCursorSegmentLength","geodesicMeasurementDistanceThreshold"]})],a.prototype,"measurementMode",null);return a=b.__decorate([c.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],
a)}(q)});