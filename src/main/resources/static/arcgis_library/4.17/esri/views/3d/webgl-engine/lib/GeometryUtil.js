// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f32 ../../../../core/libs/gl-matrix-2/vec3f64 ../../support/geometryUtils ./BufferVectorMath ./GeometryData ./Util".split(" "),function(ba,ca,f,k,Y,U,Z,B,l){var I=Z.Vec3Compact,Q;(function(f){for(var k=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],p=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],C=[0,0,1,0,1,1,0,1],c=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,
6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],d=Array(36),a=0;6>a;a++)for(var b=0;6>b;b++)d[6*a+b]=a;for(var h=Array(36),a=0;6>a;a++)h[6*a+0]=0,h[6*a+1]=1,h[6*a+2]=2,h[6*a+3]=2,h[6*a+4]=3,h[6*a+5]=0;f.createGeometry=function(a){Array.isArray(a)||(a=[a,a,a]);for(var b=new Float32Array(24),g=0;8>g;g++)b[3*g]=k[g][0]*a[0],b[3*g+1]=k[g][1]*a[1],b[3*g+2]=k[g][2]*a[2];a={};a[l.VertexAttrConstants.POSITION]=new Uint32Array(c);a[l.VertexAttrConstants.NORMAL]=new Uint32Array(d);a[l.VertexAttrConstants.UV0]=new Uint32Array(h);
g={};g[l.VertexAttrConstants.POSITION]={size:3,data:b};g[l.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(p)};g[l.VertexAttrConstants.UV0]={size:2,data:new Float32Array(C)};return new B.GeometryData(g,a)}})(Q||(Q={}));var O;(function(f){var k=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],p=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],C=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],c=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];f.createGeometry=function(d){Array.isArray(d)||
(d=[d,d,d]);for(var a=new Float32Array(18),b=0;6>b;b++)a[3*b]=k[b][0]*d[0],a[3*b+1]=k[b][1]*d[1],a[3*b+2]=k[b][2]*d[2];d={};d[l.VertexAttrConstants.POSITION]=new Uint32Array(C);d[l.VertexAttrConstants.NORMAL]=new Uint32Array(c);b={};b[l.VertexAttrConstants.POSITION]={size:3,data:a};b[l.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(p)};return new B.GeometryData(b,d)}})(O||(O={}));var R;(function(p){var D=k.vec3f32.fromValues(-.5,0,-.5),M=k.vec3f32.fromValues(.5,0,-.5),C=k.vec3f32.fromValues(0,
0,.5),c=k.vec3f32.fromValues(0,.5,0),d=k.vec3f32.create(),a=k.vec3f32.create(),b=k.vec3f32.create(),h=k.vec3f32.create(),g=k.vec3f32.create();f.vec3.subtract(d,D,c);f.vec3.subtract(a,D,M);f.vec3.cross(b,d,a);f.vec3.normalize(b,b);f.vec3.subtract(d,M,c);f.vec3.subtract(a,M,C);f.vec3.cross(h,d,a);f.vec3.normalize(h,h);f.vec3.subtract(d,C,c);f.vec3.subtract(a,C,D);f.vec3.cross(g,d,a);f.vec3.normalize(g,g);var e=[D,M,C,c],z=[0,-1,0,b[0],b[1],b[2],h[0],h[1],h[2],g[0],g[1],g[2]],aa=[0,1,2,3,1,0,3,2,1,3,
0,2],m=[0,0,0,1,1,1,2,2,2,3,3,3];p.createGeometry=function(a){Array.isArray(a)||(a=[a,a,a]);for(var b=new Float32Array(12),c=0;4>c;c++)b[3*c]=e[c][0]*a[0],b[3*c+1]=e[c][1]*a[1],b[3*c+2]=e[c][2]*a[2];a={};a[l.VertexAttrConstants.POSITION]=new Uint32Array(aa);a[l.VertexAttrConstants.NORMAL]=new Uint32Array(m);c={};c[l.VertexAttrConstants.POSITION]={size:3,data:b};c[l.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(z)};return new B.GeometryData(c,a)}})(R||(R={}));var S;(function(p){function D(c,
d,a,b,h){if(Math.abs(f.vec3.dot(d,c))>h)return!1;f.vec3.cross(a,c,d);f.vec3.normalize(a,a);f.vec3.cross(b,a,c);f.vec3.normalize(b,b);return!0}function M(c,d,a,b,h,g,e){return D(c,d,h,g,e)||D(c,a,h,g,e)||D(c,b,h,g,e)}p.createBoxGeometry=Q.createGeometry;p.createDiamondGeometry=O.createGeometry;p.createTetrahedronGeometry=R.createGeometry;p.createSphereGeometry=function(c,d,a,b,h,g,e){c=c||50;b=void 0!==b?b:-Math.PI;h=void 0!==h?h:2*Math.PI;g=void 0!==g?g:.5*-Math.PI;e=void 0!==e?e:Math.PI;var z=Math.max(3,
Math.floor(d)||8),f=Math.max(2,Math.floor(a)||6),m=(z+1)*(f+1);a=new Float32Array(3*m);d=new Float32Array(3*m);for(var m=new Float32Array(2*m),k=[],n=0,t=0;t<=f;t++){for(var p=[],F=t/f,w=g+F*e,u=Math.cos(w),A=0;A<=z;A++){var q=A/z,x=b+q*h,V=Math.cos(x)*u,H=Math.sin(w),x=-Math.sin(x)*u;a[3*n]=V*c;a[3*n+1]=H*c;a[3*n+2]=x*c;d[3*n]=V;d[3*n+1]=H;d[3*n+2]=x;m[2*n]=q;m[2*n+1]=F;p.push(n);++n}k.push(p)}c=new Uint32Array(2*z*(f-1)*3);for(t=n=0;t<f;t++)for(A=0;A<z;A++)b=k[t][A],h=k[t][A+1],g=k[t+1][A+1],e=
k[t+1][A],0===t?(c[n++]=b,c[n++]=g,c[n++]=e):t===f-1?(c[n++]=b,c[n++]=h,c[n++]=g):(c[n++]=b,c[n++]=h,c[n++]=g,c[n++]=g,c[n++]=e,c[n++]=b);l.assert(n===c.length);z={};z[l.VertexAttrConstants.POSITION]=c;z[l.VertexAttrConstants.NORMAL]=c;z[l.VertexAttrConstants.UV0]=c;f={};f[l.VertexAttrConstants.POSITION]={size:3,data:a};f[l.VertexAttrConstants.NORMAL]={size:3,data:d};f[l.VertexAttrConstants.UV0]={size:2,data:m};return new B.GeometryData(f,z)};p.createPolySphereGeometry=function(c,d,a){function b(a,
b){a>b&&(b=[b,a],a=b[0],b=b[1]);var d=a.toString()+"."+b.toString();if(e[d])return e[d];var g=h.length;h.length+=3;I.add(h,3*a,h,3*b,h,g);I.scale(h,g,c/I.length(h,g));g/=3;return e[d]=g}var h;a?(h=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],a=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1])):(a=c*(1+Math.sqrt(5))/2,h=[-c,a,0,c,a,0,-c,-a,0,c,-a,0,0,-c,a,0,c,a,0,-c,-a,0,c,-a,a,0,-c,a,0,c,-a,0,-c,-a,0,c],a=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,
7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]));for(var g=0;g<h.length;g+=3)I.scale(h,g,c/I.length(h,g));for(var e={},g=0;g<d;g++){for(var f=a.length,k=new Uint32Array(4*f),m=0;m<f;m+=3){var r=a[m],n=a[m+1],t=a[m+2],p=b(r,n),F=b(n,t),w=b(t,r),u=4*m;k[u]=r;k[u+1]=p;k[u+2]=w;k[u+3]=n;k[u+4]=F;k[u+5]=p;k[u+6]=t;k[u+7]=w;k[u+8]=F;k[u+9]=p;k[u+10]=F;k[u+11]=w}a=k;e={}}d=new Float32Array(h);for(g=0;g<d.length;g+=3)I.normalize(d,g);g={};g[l.VertexAttrConstants.POSITION]=a;g[l.VertexAttrConstants.NORMAL]=
a;a={};a[l.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(h)};a[l.VertexAttrConstants.NORMAL]={size:3,data:d};return new B.GeometryData(a,g)};p.createPointGeometry=function(c,d,a,b,h,g,e,f){d=d?new Float64Array([d[0],d[1],d[2]]):new Float32Array([0,0,0]);c=c?new Float32Array([c[0],c[1],c[2]]):new Float32Array([0,0,1]);g=g?new Float32Array(g):new Float32Array([0,0]);a=a?new Uint8Array([255*a[0],255*a[1],255*a[2],3<a.length?255*a[3]:255]):new Uint8Array([255,255,255,255]);var k=null!=b&&
2===b.length?new Float32Array(b):new Float32Array([1,1]);b={};b[l.VertexAttrConstants.POSITION]={size:3,data:d};b[l.VertexAttrConstants.NORMAL]={size:3,data:c};b[l.VertexAttrConstants.UV0]={size:g.length,data:g};b[l.VertexAttrConstants.COLOR]={size:4,data:a};b[l.VertexAttrConstants.SIZE]={size:2,data:k};null!=h&&(h=new Float32Array([h[0],h[1],h[2],h[3]]),b[l.VertexAttrConstants.AUXPOS1]={size:4,data:h});null!=e&&(e=new Float32Array([e[0],e[1],e[2],e[3]]),b[l.VertexAttrConstants.AUXPOS2]={size:4,data:e});
return null!=f?(f.initialize(b,B.GeometryData.DefaultIndices,"point"),f):new B.GeometryData(b,B.GeometryData.DefaultIndices,"point")};p.updatePointGeometry=function(c,d,a,b,h,g,e,f){var k=f.vertexAttributes;if(null!=c){var m=k[l.VertexAttrConstants.NORMAL].data;m[0]=c[0];m[1]=c[1];m[2]=c[2]}null!=d&&(m=k[l.VertexAttrConstants.POSITION].data,m[0]=d[0],m[1]=d[1],m[2]=d[2]);null!=a&&(m=k[l.VertexAttrConstants.COLOR].data,m[0]=a[0],m[1]=a[1],m[2]=a[2],m[3]=a[3]);null!=b&&(m=k[l.VertexAttrConstants.SIZE].data,
m[0]=b[0],m[1]=b[1]);null!=h&&(m=k[l.VertexAttrConstants.AUXPOS1].data,m[0]=h[0],m[1]=h[1],m[2]=h[2],m[3]=h[3]);null!=g&&(m=k[l.VertexAttrConstants.UV0].data,m[0]=g[0],m[1]=g[1]);null!=e&&(m=k[l.VertexAttrConstants.AUXPOS2].data,m[0]=e[0],m[1]=e[1],m[2]=e[2],m[3]=e[3]);return f};p.createPointArrayGeometry=function(c,d){for(var a=new Float32Array(3*c.length),b=new Float32Array(d?3*c.length:3),h=new Uint32Array(c.length),g=new Uint32Array(c.length),e=0;e<c.length;e++)a[3*e]=c[e][0],a[3*e+1]=c[e][1],
a[3*e+2]=c[e][2],d&&(b[3*e]=d[e][0],b[3*e+1]=d[e][1],b[3*e+2]=d[e][2]),h[e]=e,g[e]=0;d||(b[0]=0,b[1]=1,b[2]=0);c=new Float32Array(2);c[0]=0;c[1]=0;e={};e[l.VertexAttrConstants.POSITION]=h;e[l.VertexAttrConstants.NORMAL]=d?h:g;e[l.VertexAttrConstants.UV0]=g;d={};d[l.VertexAttrConstants.POSITION]={size:3,data:a};d[l.VertexAttrConstants.NORMAL]={size:3,data:b};d[l.VertexAttrConstants.UV0]={size:2,data:c};return new B.GeometryData(d,e,"point")};p.createTriangleGeometry=function(){var c=new Float32Array([0,
0,0,0,0,100,100,0,0]),d=new Uint32Array([0,1,2]),a=new Float32Array([0,1,0]),b=new Uint32Array([0,0,0]),h=new Float32Array([0,0]),g=new Uint32Array([0,0,0]),e={};e[l.VertexAttrConstants.POSITION]=d;e[l.VertexAttrConstants.NORMAL]=b;e[l.VertexAttrConstants.UV0]=g;d={};d[l.VertexAttrConstants.POSITION]={size:3,data:c};d[l.VertexAttrConstants.NORMAL]={size:3,data:a};d[l.VertexAttrConstants.UV0]={size:2,data:h};return new B.GeometryData(d,e)};var C=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];p.createSquareGeometry=
function(c){var d,a;void 0===c&&(c=C);for(var b=new Float64Array(12),h=0;4>h;h++)for(var g=0;3>g;g++)b[3*h+g]=c[h][g];var e=new Uint32Array([0,1,2,2,3,0]);c=new Float32Array([0,0,1]);var f=new Uint32Array([0,0,0,0,0,0]),h=new Float32Array([0,0,1,0,1,1,0,1]),g=new Uint8Array([255,255,255,255]),e=(d={},d[l.VertexAttrConstants.POSITION]=e,d[l.VertexAttrConstants.NORMAL]=f,d[l.VertexAttrConstants.UV0]=e,d[l.VertexAttrConstants.COLOR]=f,d);d=(a={},a[l.VertexAttrConstants.POSITION]={size:3,data:b},a[l.VertexAttrConstants.NORMAL]=
{size:3,data:c},a[l.VertexAttrConstants.UV0]={size:2,data:h},a[l.VertexAttrConstants.COLOR]={size:4,data:g},a);return new B.GeometryData(d,e)};p.createConeGeometry=function(c,d,a,b,h,g){void 0===h&&(h=!0);void 0===g&&(g=!0);var e=0,f=k.vec3f32.fromValues(0,e,0),p=k.vec3f32.fromValues(0,e+c,0),m=k.vec3f32.fromValues(0,-1,0),r=k.vec3f32.fromValues(0,1,0);b&&(e=c,p=k.vec3f32.fromValues(0,0,0),f=k.vec3f32.fromValues(0,e,0),m=k.vec3f32.fromValues(0,1,0),r=k.vec3f32.fromValues(0,-1,0));f=[p,f];m=[m,r];
r=a+2;p=Math.sqrt(c*c+d*d);if(b)for(b=a-1;0<=b;b--)n=2*Math.PI/a*b,t=k.vec3f32.fromValues(Math.cos(n)*d,e,Math.sin(n)*d),f.push(t),n=k.vec3f32.fromValues(c*Math.cos(n)/p,-d/p,c*Math.sin(n)/p),m.push(n);else for(b=0;b<a;b++){var n=2*Math.PI/a*b,t=k.vec3f32.fromValues(Math.cos(n)*d,e,Math.sin(n)*d);f.push(t);n=k.vec3f32.fromValues(c*Math.cos(n)/p,d/p,c*Math.sin(n)/p);m.push(n)}c=new Uint32Array(6*(a+2));a=new Uint32Array(6*(a+2));e=d=0;if(h){for(b=3;b<f.length;b++)c[d++]=1,c[d++]=b-1,c[d++]=b,a[e++]=
0,a[e++]=0,a[e++]=0;c[d++]=f.length-1;c[d++]=2;c[d++]=1;a[e++]=0;a[e++]=0;a[e++]=0}if(g){for(b=3;b<f.length;b++)c[d++]=b,c[d++]=b-1,c[d++]=0,a[e++]=b,a[e++]=b-1,a[e++]=1;c[d++]=0;c[d++]=2;c[d++]=f.length-1;a[e++]=1;a[e++]=2;a[e++]=m.length-1}h=new Float32Array(3*r);for(b=0;b<r;b++)h[3*b]=f[b][0],h[3*b+1]=f[b][1],h[3*b+2]=f[b][2];g=new Float32Array(3*r);for(b=0;b<r;b++)g[3*b]=m[b][0],g[3*b+1]=m[b][1],g[3*b+2]=m[b][2];f={};f[l.VertexAttrConstants.POSITION]=c;f[l.VertexAttrConstants.NORMAL]=a;m={};m[l.VertexAttrConstants.POSITION]=
{size:3,data:h};m[l.VertexAttrConstants.NORMAL]={size:3,data:g};return new B.GeometryData(m,f)};p.createCylinderGeometry=function(c,d,a,b,h,g){b=b?k.vec3f32.clone(b):k.vec3f32.fromValues(1,0,0);h=h?k.vec3f32.clone(h):k.vec3f32.fromValues(0,0,0);g=void 0===g?!0:g;var e=k.vec3f32.create();f.vec3.normalize(e,b);b=k.vec3f32.create();f.vec3.scale(b,e,Math.abs(c));var z=k.vec3f32.create();f.vec3.scale(z,b,-.5);f.vec3.add(z,z,h);var p=k.vec3f32.fromValues(0,1,0);.2>Math.abs(1-f.vec3.dot(e,p))&&f.vec3.set(p,
0,0,1);var m=k.vec3f32.create();f.vec3.cross(m,e,p);f.vec3.normalize(m,m);f.vec3.cross(p,m,e);var r=2*a+(g?2:0),n=a+(g?2:0);c=new Float32Array(3*r);h=new Float32Array(3*n);var t=new Float32Array(2*r),E=new Uint32Array(3*a*(g?4:2)),F=new Uint32Array(3*a*(g?4:2));g&&(c[3*(r-2)+0]=z[0],c[3*(r-2)+1]=z[1],c[3*(r-2)+2]=z[2],t[2*(r-2)]=0,t[2*(r-2)+1]=0,c[3*(r-1)+0]=c[3*(r-2)+0]+b[0],c[3*(r-1)+1]=c[3*(r-2)+1]+b[1],c[3*(r-1)+2]=c[3*(r-2)+2]+b[2],t[2*(r-1)]=1,t[2*(r-1)+1]=1,h[3*(n-2)+0]=-e[0],h[3*(n-2)+1]=
-e[1],h[3*(n-2)+2]=-e[2],h[3*(n-1)+0]=e[0],h[3*(n-1)+1]=e[1],h[3*(n-1)+2]=e[2]);for(var e=function(a,b,c){E[a]=b;F[a]=c},w=0,u=k.vec3f32.create(),A=k.vec3f32.create(),q=0;q<a;q++){var x=2*Math.PI/a*q;f.vec3.scale(u,p,Math.sin(x));f.vec3.scale(A,m,Math.cos(x));f.vec3.add(u,u,A);h[3*q+0]=u[0];h[3*q+1]=u[1];h[3*q+2]=u[2];f.vec3.scale(u,u,d);f.vec3.add(u,u,z);c[3*q+0]=u[0];c[3*q+1]=u[1];c[3*q+2]=u[2];t[2*q+0]=q/a;t[2*q+1]=0;c[3*(q+a)+0]=c[3*q+0]+b[0];c[3*(q+a)+1]=c[3*q+1]+b[1];c[3*(q+a)+2]=c[3*q+2]+b[2];
t[2*(q+a)+0]=q/a;t[2*q+1]=1;x=(q+1)%a;e(w++,q,q);e(w++,q+a,q);e(w++,x,x);e(w++,x,x);e(w++,q+a,q);e(w++,x+a,x)}if(g){for(q=0;q<a;q++)x=(q+1)%a,e(w++,r-2,n-2),e(w++,q,n-2),e(w++,x,n-2);for(q=0;q<a;q++)x=(q+1)%a,e(w++,q+a,n-1),e(w++,r-1,n-1),e(w++,x+a,n-1)}d={};d[l.VertexAttrConstants.POSITION]=E;d[l.VertexAttrConstants.NORMAL]=F;d[l.VertexAttrConstants.UV0]=E;a={};a[l.VertexAttrConstants.POSITION]={size:3,data:c};a[l.VertexAttrConstants.NORMAL]={size:3,data:h};a[l.VertexAttrConstants.UV0]={size:2,data:t};
return new B.GeometryData(a,d)};p.createTubeGeometry=function(c,d,a,b,h){a=a||10;b=null!=b?b:!0;l.assert(1<c.length);for(var g=[],e=[],f=0;f<a;f++){g.push([0,-f-1,-((f+1)%a)-1]);var k=f/a*2*Math.PI;e.push([Math.cos(k)*d,Math.sin(k)*d])}return p.createPathExtrusionGeometry(e,c,[[0,0,0]],g,b,h)};p.createPathExtrusionGeometry=function(c,d,a,b,h,g){void 0===g&&(g=k.vec3f32.fromValues(0,0,0));var e=c.length,p=new Float32Array(d.length*e*3+(6*a.length||0)),C=new Float32Array(d.length*e+(2*a.length||0)),
m=new Float32Array(d.length*e*3+(a?6:0)),r=(d.length-1)*e*6+6*b.length,n=new Uint32Array(r),r=new Uint32Array(r),t=0,E=0,F=0,w=0,u=0,A=k.vec3f32.create(),q=k.vec3f32.create(),x=k.vec3f32.create(),D=k.vec3f32.create(),H=k.vec3f32.create(),y=k.vec3f32.create(),I=k.vec3f32.create(),G=Y.vec3f64.create(),L=k.vec3f32.create(),T=k.vec3f32.create(),Q=k.vec3f32.create(),O=k.vec3f32.create(),R=k.vec3f32.create(),S=U.plane.create();f.vec3.set(L,0,1,0);f.vec3.subtract(q,d[1],d[0]);f.vec3.normalize(q,q);h?(f.vec3.add(G,
d[0],g),f.vec3.normalize(x,G)):f.vec3.set(x,0,0,1);M(q,x,L,L,H,x,W);f.vec3.copy(D,x);f.vec3.copy(O,H);for(var v=0;v<a.length;v++)f.vec3.scale(y,H,a[v][0]),f.vec3.scale(G,x,a[v][2]),f.vec3.add(y,y,G),f.vec3.add(y,y,d[0]),p[t++]=y[0],p[t++]=y[1],p[t++]=y[2],C[F++]=0;m[E++]=-q[0];m[E++]=-q[1];m[E++]=-q[2];for(v=0;v<b.length;v++)n[w++]=0<b[v][0]?b[v][0]:-b[v][0]-1+a.length,n[w++]=0<b[v][1]?b[v][1]:-b[v][1]-1+a.length,n[w++]=0<b[v][2]?b[v][2]:-b[v][2]-1+a.length,r[u++]=0,r[u++]=0,r[u++]=0;for(var J=a.length,
v=a.length-1,K=0;K<d.length;K++){var X=!1;0<K&&(f.vec3.copy(A,q),K<d.length-1?(f.vec3.subtract(q,d[K+1],d[K]),f.vec3.normalize(q,q)):X=!0,f.vec3.add(T,A,q),f.vec3.normalize(T,T),f.vec3.add(Q,d[K-1],D),U.plane.fromPositionAndNormal(d[K],T,S),U.plane.intersectRay(S,U.ray.wrap(Q,A),G)?(f.vec3.subtract(G,G,d[K]),f.vec3.normalize(x,G),f.vec3.cross(H,T,x),f.vec3.normalize(H,H)):M(T,D,O,L,H,x,W),f.vec3.copy(D,x),f.vec3.copy(O,H));h&&(f.vec3.add(G,d[K],g),f.vec3.normalize(R,G));for(var N=0;N<e;N++)if(f.vec3.scale(y,
H,c[N][0]),f.vec3.scale(G,x,c[N][1]),f.vec3.add(y,y,G),f.vec3.normalize(I,y),m[E++]=I[0],m[E++]=I[1],m[E++]=I[2],h?C[F++]=f.vec3.dot(y,R):C[F++]=y[2],f.vec3.add(y,y,d[K]),p[t++]=y[0],p[t++]=y[1],p[t++]=y[2],!X){var P=(N+1)%e;n[w++]=J+N;n[w++]=J+e+N;n[w++]=J+P;n[w++]=J+P;n[w++]=J+e+N;n[w++]=J+e+P;for(P=0;6>P;P++)r[u++]=n[w-6+P]-v}J+=e}c=d[d.length-1];for(v=0;v<a.length;v++)f.vec3.scale(y,H,a[v][0]),f.vec3.scale(G,x,a[v][1]),f.vec3.add(y,y,G),f.vec3.add(y,y,c),p[t++]=y[0],p[t++]=y[1],p[t++]=y[2],C[F++]=
0;a=E/3;m[E++]=q[0];m[E++]=q[1];m[E++]=q[2];e=J-e;for(v=0;v<b.length;v++)n[w++]=0<=b[v][0]?J+b[v][0]:-b[v][0]-1+e,n[w++]=0<=b[v][2]?J+b[v][2]:-b[v][2]-1+e,n[w++]=0<=b[v][1]?J+b[v][1]:-b[v][1]-1+e,r[u++]=a,r[u++]=a,r[u++]=a;b={};b[l.VertexAttrConstants.POSITION]=n;b[l.VertexAttrConstants.NORMAL]=r;n={};n[l.VertexAttrConstants.POSITION]={size:3,data:p};n.zOffset={size:1,data:C};n[l.VertexAttrConstants.NORMAL]={size:3,data:m};return new B.GeometryData(n,b)};p.createPolylineGeometry=function(c,d){l.assert(1<
c.length,"createPolylineGeometry(): polyline needs at least 2 points");l.assert(3===c[0].length,"createPolylineGeometry(): malformed vertex");l.assert(void 0===d||d.length===c.length,"createPolylineGeometry: need same number of points and normals");l.assert(void 0===d||3===d[0].length,"createPolylineGeometry(): malformed normal");for(var a=new Float64Array(3*c.length),b=new Uint32Array(2*(c.length-1)),f=0,g=0,e=0;e<c.length;e++){for(var k=0;3>k;k++)a[f++]=c[e][k];0<e&&(b[g++]=e-1,b[g++]=e)}f={};g=
{};f[l.VertexAttrConstants.POSITION]=b;g[l.VertexAttrConstants.POSITION]={size:3,data:a};if(d){for(var a=new Float32Array(3*d.length),p=0,e=0;e<c.length;e++)for(k=0;3>k;k++)a[p++]=d[e][k];f[l.VertexAttrConstants.NORMAL]=b;g[l.VertexAttrConstants.NORMAL]={size:3,data:a}}return new B.GeometryData(g,f,"line")};p.createExtrudedTriangle=function(c,d,a,b){var f,g,e=new Float32Array(18);c=[[-d,0,b/2],[a,0,b/2],[0,c,b/2],[-d,0,-b/2],[a,0,-b/2],[0,c,-b/2]];for(d=0;6>d;d++)e[3*d]=c[d][0],e[3*d+1]=c[d][1],e[3*
d+2]=c[d][2];c=(f={},f[l.VertexAttrConstants.POSITION]=new Uint32Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]),f);f=(g={},g[l.VertexAttrConstants.POSITION]={size:3,data:e},g);return new B.GeometryData(f,c)};p.transformInPlace=function(c,d){c=c.vertexAttributes[l.VertexAttrConstants.POSITION].data;for(var a=0;a<c.length;a+=3)f.vec3.set(L,c[a],c[a+1],c[a+2]),f.vec3.transformMat4(L,L,d),c[a]=L[0],c[a+1]=L[1],c[a+2]=L[2]};p.cgToGIS=function(c,d){void 0===d&&(d=c);var a=c.getVertexAttr();c=
a.position.data;var a=a.normal.data,b=d.getVertexAttr(),f=b.position.data,b=b.normal.data;if(a)for(var g=0;g<a.length;g+=3){var e=a[g+1];b[g+1]=-a[g+2];b[g+2]=e}if(c)for(g=0;g<c.length;g+=3)e=c[g+1],f[g+1]=-c[g+2],f[g+2]=e;return d};p.makeOrthoBasisDirUp=D;p.makeOrthoBasisDirUpFallback=M})(S||(S={}));var W=.99619469809,L=k.vec3f32.create();return S});