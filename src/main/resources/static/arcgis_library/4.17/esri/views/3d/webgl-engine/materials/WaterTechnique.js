// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define("require exports tslib ../core/shaderLibrary/Slice.glsl ../core/shaderLibrary/output/OutputHighlight.glsl ../core/shaderLibrary/shading/ReadShadowMap.glsl ../core/shaderLibrary/shading/ScreenSpaceReflections.glsl ../core/shaderLibrary/shading/WaterDistortion.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultTextureUnits ../lib/DefaultVertexAttributeLocations ../shaders/WaterSurface.glsl ../../../webgl/Program ../../../webgl/renderState @dojo/framework/shim/Promise".split(" "),
function(k,f,d,l,m,n,p,q,h,r,g,c,t,u,v,w,e){Object.defineProperty(f,"__esModule",{value:!0});f.WaterTechniqueConfiguration=f.WaterTechnique=void 0;g=function(c){function b(a,b){b=c.call(this,a,b)||this;b.waterTextureRepository=a.waterTextureRepository;return b}d.__extends(b,c);b.prototype.initializeProgram=function(a){var c=b.shader.get(),d=this.configuration,c=c.build({output:d.output,viewingMode:a.viewingMode,slicePlaneEnabled:d.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,
receiveShadows:d.receiveShadows,pbrMode:3,useCustomDTRExponentForWater:!0,ssrEnabled:d.useSSR,highStepCount:!0});return new w(a.rctx,c.generateSource("vertex"),c.generateSource("fragment"),u.Default3D)};b.prototype.ensureResource=function(a){this.waterTextureRepository.ready||this.waterTextureRepository.updating||this.waterTextureRepository.loadTextures(a);return this.waterTextureRepository.ready?2:1};b.prototype.bindPass=function(a,b,c){h.View.bindProjectionMatrix(this.program,c.camera.projectionMatrix);
0===this.configuration.output&&(c.lighting.setUniforms(this.program,!1),p.ScreenSpaceReflections.bindUniforms(this.program,a,c));if(0===this.configuration.output||2===this.configuration.output)q.WaterDistortion.bindUniforms(this.program,b),this.waterTextureRepository.bindRepo(a);this.program.setUniform4fv("waterColor",b.color);4===this.configuration.output&&m.OutputHighlight.bindOutputHighlight(a,this.program,c)};b.prototype.bindDraw=function(a){h.View.bindView(this.program,a);0===this.configuration.output&&
(h.View.bindCamPosition(this.program,a.origin,a.camera.viewInverseTransposeMatrix),n.ReadShadowMap.bindUniforms(this.program,a,t.DefaultTextureUnits.SHADOW_MAP));0!==this.configuration.output&&4!==this.configuration.output||l.Slice.bindUniformsWithOrigin(this.program,this.configuration,a)};b.prototype.initializePipeline=function(){var a=this.configuration;return 2===a.output?e.makePipelineState({depthTest:{func:513},depthWrite:a.writeDepth&&e.defaultDepthWriteParams,colorWrite:e.defaultColorWriteParams}):
e.makePipelineState({blending:4!==a.output&&a.transparent?e.separateBlendingParams(770,1,771,771):null,depthTest:{func:513},depthWrite:a.writeDepth&&e.defaultDepthWriteParams,colorWrite:e.defaultColorWriteParams})};b.shader=new r.ReloadableShaderModule(v,function(){return new Promise(function(a,b){k(["../shaders/WaterSurface.glsl"],a,b)})});return b}(g.ShaderTechnique);f.WaterTechnique=g;g=function(e){function b(){var a=null!==e&&e.apply(this,arguments)||this;a.output=0;a.receiveShadows=!1;a.slicePlaneEnabled=
!1;a.transparent=!1;a.writeDepth=!1;a.useSSR=!1;a.isDraped=!1;return a}d.__extends(b,e);d.__decorate([c.parameter({count:7})],b.prototype,"output",void 0);d.__decorate([c.parameter()],b.prototype,"receiveShadows",void 0);d.__decorate([c.parameter()],b.prototype,"slicePlaneEnabled",void 0);d.__decorate([c.parameter()],b.prototype,"transparent",void 0);d.__decorate([c.parameter()],b.prototype,"writeDepth",void 0);d.__decorate([c.parameter()],b.prototype,"useSSR",void 0);d.__decorate([c.parameter()],
b.prototype,"isDraped",void 0);return b}(c.ShaderTechniqueConfiguration);f.WaterTechniqueConfiguration=g});