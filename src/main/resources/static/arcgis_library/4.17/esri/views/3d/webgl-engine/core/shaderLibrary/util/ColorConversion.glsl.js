// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.17/esri/copyright.txt for details.
//>>built
define(["require","exports","tslib","../../shaderModules/interfaces"],function(e,a,c,d){Object.defineProperty(a,"__esModule",{value:!0});a.ColorConversion=void 0;a.ColorConversion=function(a){a.code.add(d.glsl(b||(b=c.__makeTemplateObject(["\n    vec4 premultiplyAlpha(vec4 v) {\n      return vec4(v.rgb * v.a, v.a);\n    }\n\n    // Note: the min in the last line has been added to fix an instability in chrome.\n    // See https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/23911\n    // With proper floating point handling, the value could never be \x3e1.\n    vec3 rgb2hsv(vec3 c) {\n      vec4 K \x3d vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n      vec4 p \x3d c.g \x3c c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n      vec4 q \x3d c.r \x3c p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n      float d \x3d q.x - min(q.w, q.y);\n      float e \x3d 1.0e-10;\n      return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n    }\n\n    vec3 hsv2rgb(vec3 c) {\n      vec4 K \x3d vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n      vec3 p \x3d abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n      return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n\n    float rgb2v(vec3 c) {\n      return max(c.x, max(c.y, c.z));\n    }\n  "],
["\n    vec4 premultiplyAlpha(vec4 v) {\n      return vec4(v.rgb * v.a, v.a);\n    }\n\n    // Note: the min in the last line has been added to fix an instability in chrome.\n    // See https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/23911\n    // With proper floating point handling, the value could never be \x3e1.\n    vec3 rgb2hsv(vec3 c) {\n      vec4 K \x3d vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n      vec4 p \x3d c.g \x3c c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n      vec4 q \x3d c.r \x3c p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n      float d \x3d q.x - min(q.w, q.y);\n      float e \x3d 1.0e-10;\n      return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n    }\n\n    vec3 hsv2rgb(vec3 c) {\n      vec4 K \x3d vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n      vec3 p \x3d abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n      return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n\n    float rgb2v(vec3 c) {\n      return max(c.x, max(c.y, c.z));\n    }\n  "]))))};
var b});